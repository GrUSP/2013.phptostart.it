%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Vito) ()%%Title: (NEEN.eps)%%CreationDate: 24/02/11 16.10%%Canvassize: 16383%%BoundingBox: 49 349 541 505%%HiResBoundingBox: 49.0723 349.7744 540.7617 504.374%%DocumentProcessColors:%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%DocumentCustomColors: (PANTONE 158 U)%%+ (PANTONE 403 U)%%CMYKCustomColor: 0 0.61 0.97 0 (PANTONE 158 U)%%+ 0 0.66 1 0.07 (PANTONE 159 U)%%+ 0 0.07 0.17 0.43 (PANTONE 403 U)%%+ 0 0.08 0.22 0.56 (PANTONE 404 U)%%+ 0 0.18 0.21 0.56 (PANTONE 410 U)%%+ 0 0 0 0.61 (PANTONE 424 U)%%+ 0 0 0 0.77 (PANTONE 425 U)%%CMYKProcessColor: 0.75021 0.679683 0.670222 0.90164 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 299.0684 426.3779 299.0684 426.3779%AI3_TileBox: 18.7842 46.3828 577.7842 829.3833%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 515.4316 172.9893%AI5_RulerUnits: 4%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -399 1057.8887 1 1474 885 18 0 0 129 150 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 40 8%%BeginData: 8598 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD05FF7D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA7A8FD0BFF%A8A87DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7DFD07FFA8%7DA77D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DFD06FFA87D%A17D7D7DA17D7D7DA17D7D7DA17D7D7DA17DA7A8FD06FFA8A17C7D7C7D7C%7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7DA8FD07FFCA7D7D7C7D7C7D7C%7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7CFD05FFA17D7C7D7C7D7C%7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7CA7FD04FFA87D7C7D7C7D%7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7DFD04FFA8A17D7D7DA17D7D%7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17DCFFD06FF7D7D7DA17D7D7D%A17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA1FD04FF7D7D7DA17D7D%7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA1A1FFFFFFA87D7DA1%7D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DFFFFFFA17C7D7C%7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7CFD04FFCF7C7D%7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7CFFFFFF%7D7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7CA7%FFFFA87D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D%7DFFFF7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D%7D7DFFFFFF7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7D%A17D7D7DA1FFFFA8A17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D%7D7DA17D7D7DA1A1FFFFA87D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7D%A17D7D7DA17D7D7DA1A87D7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D%7C7D7C7D7C7D7C7D7C7DA8FFA87D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D%7C7D7C7D7C7D7C7D7C7D7C7D7CFFFFA87C7D7C7D7C7D7C7D7C7D7C7D7C7D%7C7D7C7D7C7D7C7D7C7D7C7D7C7D7CA8FFFF7C7D7C7D7C7D7C7D7C7D7C7D%7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7CA7A17D7D7DA17D7D7DA17D7D7D%A17D7D7DA17D7D7DA17D7D7DA17D7D7DA17DCFFFA87D7D7DA17D7D7DA17D%A8A8FD15FF7D7D7DA17D7D7DA17DA1A8FD15FFA87D7DA17D7D7DA17D7D7D%A17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7D7C7D7C7D7C7D7C7D7C7D%7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7DA7FF7D7D7C7D7C7D7C7D%7CA8FD17FF7D7C7D7C7D7C7D7C7DA8FD16FFA87C7D7C7D7C7D7C7D7C7D7C%7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7DA17D7D7DA17D7D7DA17D7D%7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17DA8FFA87D7D7DA17D7D7DA1%A8FD17FF7D7D7DA17D7D7DA17DFD17FFA87D7DA17D7D7DA17D7D7DA17D7D%7DA17D7D7DA17D7D7DA17D7D7DA17D7D7D7C7D7C7D7C7D7C7D7C7DA8FD0C%FFA87C7D7C7D7C7DA8FF7D7D7C7D7C7D7C7D7CFD18FF7D7C7D7C7D7C7D7C%7DFD17FFA87C7D7C7D7C7DA1FD0DFF7D7D7C7D7C7D7C7D7C7D7D7DA17D7D%7DA17D7DA8FD0EFFA77DA17D7D7DA8FFA87DA17D7D7DA17D7DA8FFFFCAC2%C9CAFD11FF7DA17D7D7DA17D7D7DFFFFFFC9C2C3CFFD10FFA8A17D7D7DA1%7DFD0FFF7D7D7DA17D7D7DA17D7C7D7C7D7C7D7C7D7CFD0FFFA77D7C7D7C%7DA7FF7D7D7C7D7C7D7C7D7CCFFFC299C198C1A0FD10FF7D7C7D7C7D7C7D%7C7DFFFF9FC198C199C9FD0FFFA87C7D7C7D7CA8FD0FFF7D7C7D7C7D7C7D%7C7D7D7DA17D7D7DA17D7DFD0FFFA87DA17D7D7DCAFFA87DA17D7D7DA17D%7DA8CFBBC199C1BBC1CAFD0FFF7DA17D7D7DA17D7D7DFFC9C199C1BBC1BB%FD0FFFA8A17D7D7DA1A8FD0FFF7D7D7DA17D7D7DA17D7C7D7C7D7C7D7C7D%7CFD0FFFA87D7C7D7C7DA7FF7D7D7C7D7C7D7C7D7CFFA1C199C199C199C9%FD0FFF7D7C7D7C7D7C7D7C7DFFC299C199C199C1CAFD0EFFA87C7D7C7D7C%CAFD0FFF7D7C7D7C7D7C7D7C7DA17D7D7DA17D7D7DA1FD0FFFCF7D7D7DA1%7DA8FFA87D7D7DA17D7D7DA1A8C999C1BBC199C1C9FD0FFF7D7D7DA17D7D%7DA17DFFA0C1BBC199C1BBFD0FFFA87D7DA17D7DA8FD0FFF7DA17D7D7DA1%7D7D7D7C7D7C7D7C7D7C7D7CFD0FFFA87D7C7D7C7DA7FF7D7D7C7D7C7D7C%7D7CFFCAC198C199C199FD10FF7D7C7D7C7D7C7D7C7DFFC998C199C198C2%FD0FFFA87C7D7C7D7CCFFD0FFF7D7C7D7C7D7C7D7C7DA17D7D7DA17D7D7D%A1FD10FF7D7D7DA17DA8FFA87D7D7DA17D7D7DA1A8FFC9C1BBC1BBCFFD10%FF7D7D7DA17D7D7DA17DFFFFC9BBC199C2CAFD0FFFA87D7DA17D7DA8FD0F%FF7DA17D7D7DA17D7D7D7C7D7C7D7C7D7C7D7CFD0FFFA87D7C7D7C7DA8FF%7D7D7C7D7C7D7C7D7CFFFFFFCACFCAFD12FF7D7C7D7C7D7C7D7C7DFD04FF%CACAFD11FFA87C7D7C7D7CFD10FF7D7C7D7C7D7C7D7C7D7D7DA17D7D7DA1%7D7DFD10FF7DA17D7D7DA8FFA87DA17D7D7DA17D7DA8FD17FF7DA17D7D7D%A17D7D7DFD17FFA8A17D7D7DA1A8FD0FFF7D7D7DA17D7D7DA17D7C7D7C7D%7C7D7C7D7CFD0FFFA87D7C7D7C7DA7FF7D7D7C7D7C7D7C7D7CA8FD17FF7D%7C7D7C7D7C7D7C7DA8FD16FFA87C7D7C7D7CFD10FF7D7C7D7C7D7C7D7C7D%7D7DA17D7D7DA17D7DFD10FF7DA17D7D7DCAFFA87DA17D7D7DA17D7D7DFD%17FF7DA17D7D7DA17D7D7DCAFD16FFA8A17D7D7DA1A8FD0FFF7D7D7DA17D%7D7DA17D7C7D7C7D7C7D7C7D7CFD0FFFA87D7C7D7C7DA7FF7D7D7C7D7C7D%7C7D7C7D7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF7D7C7D%7C7D7C7D7C7D7CA8A8CAA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8%7C7D7C7D7CFD10FF7D7C7D7C7D7C7D7C7DA17D7D7DA17D7D7DA1FD10FF7D%7D7DA17DA8FFA87D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7D%A17D7D7DA17D7DFFFF7D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D%7D7DA17D7D7DA17D7D7DFFA87D7DA17D7DA8FD0FFF7DA17D7D7DA17D7D7D%7C7D7C7D7C7D7C7D7CFD0FFFA87D7C7D7C7DA7FF7D7D7C7D7C7D7C7D7C7D%7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7CFFFF7D7C7D7C7D7C7D%7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7CA7FFA87C7D7C7D%7CCFFD0FFF7D7C7D7C7D7C7D7C7DA17D7D7DA17D7D7DA1FD10FF7D7D7DA1%7DA8FFCA7D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D%7DA17D7DFFFF7D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA1%7D7D7DA17D7D7DFFA87D7DA17D7DA8FD0FFF7DA17D7D7DA17D7D7D7C7D7C%7D7C7D7C7D7CFD0FFFA87D7C7D7C7DA8FFA87D7C7D7C7D7C7D7C7D7C7D7C%7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7CFFFFA87C7D7C7D7C7D7C7D7C%7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7CA7FFA87C7D7C7D7CFD10%FF7D7C7D7C7D7C7D7C7D7D7DA17D7D7DA17D7DFD10FF7DA17D7D7DA8FFFF%7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA1%FFFFCFA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D%7DA1A1FFA8A17D7D7DA1A8FD0FFF7D7D7DA17D7D7DA17D7C7D7C7D7C7D7C%7D7CFD0FFFA87D7C7D7C7DA7FFFFFF7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C%7D7C7D7C7D7C7D7C7D7C7D7C7D7CFFFFFFA77D7C7D7C7D7C7D7C7D7C7D7C%7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7CA7FFA87C7D7C7D7CFD10FF7D7C7D%7C7D7C7D7C7D7D7DA17D7D7DA17D7DFD10FF7DA17D7D7DCAFD04FF7D7D7D%A17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA1FD04FFA87D%7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA17D7D7DA1A1FFA8A1%7D7D7DA1A8FD0FFF7D7D7DA17D7D7DA17D7C7D7C7D7C7D7C7D7CFD0FFFA8%7D7C7D7C7DA7FD05FF7D7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C%7D7C7D7C7D7CFD05FFA87D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C%7D7C7D7C7D7CA8FFA87C7D7C7D7CFD10FF7D7C7D7C7D7C7D7C7DA8A1A87D%A8A1A87DA8FD10FFA1A87DA8A1CFFD06FFCFA87DA8A1A87DA8A1A87DA8A1%A87DA8A1A87DA8A1A87DA8A1A8FD07FFCFA7A8A1A87DA8A1A87DA8A1A87D%A8A1A87DA8A1A87DA8A1A8A7FFA8A87DA8A1A8A8FD0FFF7DA8A1A87DA8A1%A87DFDFCFFFDB5FFC9CAFFFFC3CFCAC9C3C9CFCFC9FFFFCACACAC9C9C3FD%04FFFD04C9FFFFFFC3C9FFFFC3C9C9C9CAFFC9C9FD05FFC9C9C9CACFC9C9%C3CAC9C9C9FFCACAFD08C9C3CFC9C9C3CAFD32FFCA98CAA1C1A7C19FC299%C2A1C2FFFFA0C99FC2A1C299FFFFFF98C9A0C199FFCAC198CACAC299C1A0%C9A8C199C9FFFFFFC999C99FC1A1C1A1C9A7C299C1CAC9A0C999C19FC998%C2A1C9A7C1A0C999C9FD32FFC8C1C2C3CFBBFFFFC9BBC9C2FFFFC2C9C8C9%FFCAC1FFFFFFC1CAFFCAC1FFC9C1C9C2FFFFC9C2FFFFC9C1C9C2FFFFFFC2%C9FFFFC9C9BBCFCAFFC2C299C9C9C2FFCFBBCFFFC1C2CFCACFBBCFFFC8C2%FD32FFCAC199FFCAC1FFFFA1C1C3C2FFFFA0C9A0C2A0C2A0FFFFFF99CFFF%CA99CF9FC9A7C1CFFFA1C2FFFF99C9C9C1CAFFFFC2A1FFFFFFA1C1A0C2A7%C2A0C299C9A0FFCAC1CAFF99C2A0C2CAC19FC299CAFD33FFA0C9FFCF99FF%FFC999CAC1FFFFC2C9C2A0C9C1C2FFFFFFC1CAFFC9C1CAC1C2C299CAFFC9%A0FFCAC19FC2BBCAFFFFC2C9FFCFBBC999FFFFFFA0C2CAC199C2FFCF99CF%FFC1C3FFFFCF99C9C3C1C9FD33FFC2A1FFCAC198C299C2A8C199C198FFA0%C9FFCA99FFFFFF99C299C1A0C999CFCAC2A0FFA1C2FFC999CAA7C2A0FFFF%C999C198C1A1C19FC2A0C29FFFA0C19FFFCAC1A7FF99C19FC2C9C1A7FFA0%C2%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp12 Bn%AI5_BeginGradient: (Copper Radial)(Copper Radial) 1 4 Bd[<000001010201020203030404050505060607070707080809090A0A0B0B0C0B0D0C0D0D0F0E1010111112121313141415151616171719191A1A1A1B1B1C1C1D1D1F1F2020212122222323242425252626272729282A><0B0C0B0D0E0F0F101113121314151516171818191A1B1B1C1D1E1E1F20212221232325242526282728292A2B2B2C2D2E2F2F30313332343536383739393B3C3C3D3E3F3F40424344444546474848494A4B4C4C4D4E><22222425262527282A2A2C2D2E2E3031323334353637393A3A3B3D3C3D3E3E404142434445464748494A4B4C4E4E4F50515354555658595A5B5C5E5F6061626364656668696A6B6B6D6E6F70717374757677797A7C>0.000031<FFFFFEFEFDFDFCFCFBFBFAFAF9F9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDECECEBEBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9D8D8D7D7D6><F1F0F0EFEEEDEDECEBEAEAE9E8E7E7E6E5E4E4E3E2E1E1E0DFDEDEDDDCDBDADAD9D8D7D7D6D5D4D4D3D2D1D0D0CFCECDCCCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBEBDBCBBBABAB9B8B7B6B6B5B4B3B2B2B1B0><DBDAD9D8D7D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89>4 %_Br<2A2B2A2C2D2D2E2F2F303132323334343536373738393A3A3B3B3B3C3D3E3D3E3F40404041424243444444454546454647464747484748484948494A4A4A4A4B4B4B4C4C4D4C4D4E4E4F4E4F4F504F4F50504F505050505051515151515251525252525252><4E4F50515152535455565758595A5B5D5D5D5E606162636465666869696A6B6C6D6E6F70717071727374767778787A7B7C7D7E7F8081828384858687888A8B8C8D8E8F9091929192939495969797999A9B9C9E9F9FA0A2A3A4A5A7A8A9A9ABACADAEAFB0B1><7C7D7E7F8180828384858687898A8B8C8E90919294959698999A999B9C9D9E9FA0A1A2A3A4A6A7A9AAABACACAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C2C3C4C5C6C7C8C9CBCCCDCECFD0D1D2D4D5D6D7D8D9DBDCDDDFE0E1E3E4E6E7E8EAECEDF0F2><000000000000000000000000000101010101010202020303030303040404050506060707080809090A0B0B0C0D0E0E0F1010111213131415161618191A1A1B1C1D1E1F202122232425262728292A2B2C2D2F2F3032333335363738393B3C3D3E3F41414244><D6D5D5D4D3D3D2D1D1D0CFCECECDCCCCCBCAC9C9C8C7C6C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBBBAB9B8B8B7B6B5B5B4B3B3B2B1B0B0AFAEADADACABAAAAA9A8A7A7A6A5A4A4A3A2A1A0A09F9E9D9D9C9B9A9A999897979695949493929191908F8E8E8D8C><B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A1A09F9E9D9C9B9A999897969594939291908F8E8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150><89888786858584838281807F7E7D7C7B7A79787776757473727171706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827>4 %_Br<5252535353545454545455555556565656575757575858585858595958585858595959595A5A5A5B5B5B5B5C5C5C5D5D5D5E5E5F5F60606061><B1B2B3B4B5B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C3C4C5C6C7C8C8C9CBCECFD0D1D2D2D3D4D5D6D6D7D8D9DADBDCDDDDDEDFE0E0E1E2E3E3E4><F2F2F4F3F2F4F3F1F3F1EFF1EFEDEDECEBEDEDEDEFEEEDEEECEAEBE9E8E8E7E8E6E5E6E5E4E5E3E1E2E0DEDFDDDBDCDBDADBDAD8D9D7D5D6D4><44454648494A4C4D4F505253555658595A5C5D5F6062646567686A6C6C6E707173747677797B7D7E8082838587888A8B8D8E9091939596989A><8C8B8A898887868584838281807F7E7D7C7B7A79787776757473727171706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958575655><504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817><27272626262525252424242323232222222121212020201F1F1F1E1E1E1D1D1C1C1C1B1B1B1A1A1A1919191818181717171616161515151414>4 %_Br[0.000671 0.042329 0.132448 0.000031 1 0.945098 0.858824 2 51.0204 0.395812 %_BS%_0.000671 0.042329 0.132448 0.000031 1 0.945098 0.858824 2 51.0204 0.395812 Bs0.162783 0.306157 0.484749 0.000031 0.839216 0.690196 0.537255 2 51.0204 30.8989 %_BS%_0.162783 0.306157 0.484749 0.000031 0.839216 0.690196 0.537255 2 51.0204 30.8989 Bs0.322393 0.694942 0.947936 0.265843 0.54902 0.313726 0.152941 2 50 78.0899 %_BS%_0.322393 0.694942 0.947936 0.265843 0.54902 0.313726 0.152941 2 50 78.0899 Bs0.379828 0.894408 0.831479 0.602014 0.333333 0.090196 0.078431 2 50 100 %_BS%_0.379828 0.894408 0.831479 0.602014 0.333333 0.090196 0.078431 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Desert Sunset)(Desert Sunset) 0 6 Bd[<393B3C3C3D3E3F414143444646474849494A4C4D4D4E4F4F505152525354545657575859595A5C5C5D5E5E5F606061616263636464656567686869696A6A6B6B6D6D6E6E6F6E706F707071717172727473737574767676777777777878787879797979><58595A5C5D5E5F60626364656768696A6C6B6C6E6F7071737475767677787A7B7C7E7E7F808283858485878889898B8C8E8D8F9091919394939596969799989A9B9B9C9E9D9F9EA0A2A2A3A3A4A4A6A5A7A7A8A8AAAAABABABACACACADADADAEAEAEAE><2E2F2E2F302F30313032333233343335353637363737373738373838393A393A393A3B3C3C3B3C3B3D3C3D3C3D3D3E3F3E4040413F41404141404141424143424343424343444444434344444345444445454446454546464645464645454746464646><00000000000000000000000000000000000000000000000000000000000000000101010101010101010101010202020202020203030303030404040404040505050505050606060707070707070808080808080909090A0A0A0A0B0B0B0B0B0B0B0B0B><C5C4C3C3C2C1C0BFBFBEBDBCBCBBBAB9B9B8B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABABAAA9A9A8A7A7A6A5A5A4A4A3A2A2A1A1A0A09F9E9E9D9D9C9C9B9B9A9A999998989797969695959594949393939292919191909090908F8F8F8F8E8E8E8E><A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8E8D8C8B8A8988888786858483838281807F7F7E7D7C7C7B7A7979787777767575747373727171706F6F6E6E6D6C6C6B6B6A6A696968686767666665656564646463636362626262><B4B3B3B2B1B1B0AFAFAEADADACABABAAA9A9A8A8A7A6A6A5A4A4A3A3A2A1A1A0A09F9F9E9D9D9C9C9B9B9A9A99999897979696959594949393939292919190908F8F8F8E8E8D8D8C8C8C8B8B8B8A8A8A89898988888887878787868686868585858585>4 %_Br<202122232425262728292A2B2C2E2F30313233343637373839><4142434546474647484A4B4C4D4E4F50515252535454565758><52504F4D4D4A4B494846454340403E3D3B3A3838353432312E>0.000031<DEDDDCDBDAD9D8D7D6D5D4D3D2D0CFCECDCCCBCAC9C8C7C6C5><BDBCBBBAB9B8B8B7B6B5B4B3B2B1B0AFAEADADACABAAA9A8A7><A7A8A8A9A9AAAAABABACACADAEAEAFAFB0B0B1B1B2B2B3B3B4>4 %_Br<05060708090A0A0B0C0D0E0F10121314161718191A1B1C1C1C1D1F20><2C2D2E2E2F3031323332343536373738393A3A3B3C3D3D3E3F404041><7B7977777573716F6D6D6B6A686667656361615F5D5B5B5957545552>0.000031<F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E1E0DFDE><D2D1D0D0CFCECDCCCBCBCAC9C8C7C7C6C5C4C4C3C2C1C1C0BFBEBEBD><929394949596979899999A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7>4 %_Br<0303030303030403030304040404040404040404040404040505050505050506050505050505050606060606050505050505050505050506050505050505><7C7B79787876757472716F6E6D6B6A69676766646362605F5E5D5B5A595756545352514F4E4D4B4A494746444342403F3D3C3B39383736343332302F2E2C><9F9E9E9D9D9C9B9B9A999A989798979696959494939293929191908F8E8F8D8C8D8C8B8B8A8988898887878785848483828281807F7F7E7D7E7D7C7B7C7B>0.000031<F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8><9798999A9A9B9C9D9E9FA0A1A2A3A4A5A6A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2><6869696A6A6B6C6C6D6E6E6F7070717272737474757676777878797A7B7B7C7D7D7E7F7F80818282838484858687878889898A8B8C8C8D8E8E8F90919192>4 %_Br<282727262626252423232221212020201F1E1D1D1C1B1B1A19191817161615141413121211100E0E0D0B0B0A09090807060605040403><9F9E9E9D9C9C9B9C9A999998979796959594939392939190908F8E8F8E8C8D8B8A8A89898887888685858382828180807F7F7E7D7D7C><F0EFEDEBEAE8E7E5E3E1DFDEDDDBD9D8D6D5D3D1D0CFCDCCCAC9C8C5C3C2C1BFBEBDBBBAB9B7B6B4B3B1AFAEACABA9A7A6A4A3A2A09F><070606060505050504040403030303030202020202020201010101010101010101000000000000000000000000000000000000000000><CECFCFD0D1D1D2D3D4D4D5D6D6D7D8D8D9DADBDBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E6E7E8E9E9EAEBEBECEDEDEEEFF0F0F1F2F2F3><75767677787879797A7B7B7C7D7D7E7F7F8081818282838484858686878888898A8A8B8B8C8D8D8E8F8F909191929393949495969697><32333435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152535455565758595A5B5C5D5E5F606162636465666768>4 %_Br[0.47538 0.68368 0.275608 0.044678 0.556863 0.384314 0.521569 2 50 100 %_BS%_0.47538 0.68368 0.275608 0.044678 0.556863 0.384314 0.521569 2 50 100 Bs0.224826 0.345525 0.180331 0.000031 0.772549 0.654902 0.705882 2 38.4615 71.0424 %_BS%_0.224826 0.345525 0.180331 0.000031 0.772549 0.654902 0.705882 2 38.4615 71.0424 Bs0.125032 0.255436 0.322667 0.000031 0.870588 0.741176 0.654902 2 50 53.6679 %_BS%_0.125032 0.255436 0.322667 0.000031 0.870588 0.741176 0.654902 2 50 53.6679 Bs0.02118 0.174197 0.481025 0.000031 0.972549 0.823529 0.572549 2 48 38.764 %_BS%_0.02118 0.174197 0.481025 0.000031 0.972549 0.823529 0.572549 2 48 38.764 Bs0.01178 0.486061 0.622217 0.000031 0.952941 0.592157 0.407843 2 51.6129 13.1273 %_BS%_0.01178 0.486061 0.622217 0.000031 0.952941 0.592157 0.407843 2 51.6129 13.1273 Bs0.157443 0.62295 0.94229 0.026734 0.807843 0.458824 0.196078 2 50 0 %_BS%_0.157443 0.62295 0.94229 0.026734 0.807843 0.458824 0.196078 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Fade to Black)(Fade to Black) 0 2 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Linear Gradient)(Linear Gradient) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F808081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient)(Radial Gradient) 1 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F808081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Soft Black Vignette)(Soft Black Vignette) 1 3 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 68.3944 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 68.3944 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 31.8603 88.7329 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 31.8603 88.7329 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 100 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 17)(Unnamed gradient 17) 0 6 Bd[<FFFFFFFFFEFCFBFAF9F8F7F6F5F3F2F1F0EEEDECEBEAE8E8E7E5E4E3E2E1E0DEDDDCDAD9D7D6D5D4D2D1D0CECDCCCAC9C8C6C5C3C2C1C0BFBDBCBBBAB9B7B6B5B3B1B0AEADACAAA9A7A6A4A3A2A09F9D9C9B99999796959392908F8D8B8A888785848381807E7D7B7A79787675747271706F6E6C6B6A6866656362615F5E5D5C5B59585755545351504E4D4C4A49484746444342403E3D3C3A393736343332302F2E2D2B2A282725242221201E1D1B1A181715141312110F0E0D0B0A09070605040201><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFCFCFCFCFCFB><404040403F3F3F3E3D3D3C3C3C3C3C3B3B3B3B3B3B3B3B39393939393939393939393939393937373737373737363636363636363635353535353535353536363636353534343434343434343435353535353534343434343434343434343434343232323232323232323232323232323030303030303131313131323232333131313131313131313131313131312F2F2F302F2F2F2F2F2F2F303030302D2E2E2E2E2E2E2E2D2D2D2E2E2E2E2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2828282828282828><1D1D1E1E1E1E1E1E1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1B1B1B1B1B1A1A1A1A1A1A1A19191A1818191818181818181818181818181616161515151515141413131313131212121212121212121111111110100F0E0E0D0D0D0D0D0D0D0D0D0C0C0B0B0B0A0A0A0909090808080808080707060606060505050504040403030303030303030303030302020202020101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC><272727272726262626262626262625252525252525252524242424242424242323232323232323232222222222222222222121212121212121212020202020202020201F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A191919191919191918181818181818181817171717171717171716161616161616161615151515151515151514141414141414141313131313131313131212121212121212121111111111><6F6F6F6F6F6F6F6F70707070707070707070707070707071717171717171717171717171717172727272727272727272727272727273737373737373737373737373737374747474747474747474747474747475757575757575757575757575757676767676767676767676767676767777777777777777777777777777777878787878787878787878787878787979797979797979797979797979797A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7C7C7C7C7C7C7C7C>4 %_Br<C4C4C5C6C6C7C7C8C8C8C9C9CACACBCBCCCCCDCECECFCFD0D0D1D1D2D3D3D4D4D5D5D6D6D7D8D8D9D9DADBDBDCDCDDDDDEDEDFE0E0E1E2E3E3E5E6E6E7E7E8E8E9EAEAEBEBECEDEDEEEEEFEFF0F0F1F2F2F3F4F5F5F6F6F7F8F8F9FAFAFBFCFCFDFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><3E4042434547484A4C4D4F5052545557585A5C5D5F61636466686A6C6D6F71727476787A7B7E7F81838587888A8C8E8F91939597999B9D9FA1A5A7A9ACADAFB1B3B5B6B8BABBBEBFC1C3C5C7C9CBCDCED0D2D4D6D7D9DBDDDFE0E1E3E5E7E8E9ECEDEFF0F1F4F4F5F6F7F9FAFBFCFEFFFF><3B3C3B3C3B3B3C3B3B3A3B3B3A3B393A3B393A3B393A3839393838373838373836373836373636373636353637363637363635353634353434343333323334333332333433343333343334343334333435343534353534353435363637363738373838383938393B3A3C3B3D3E3E3F3F40><0001010101010101010101010101010202020202030303030303030304040405040505050505060606070607070707080808080909090A090A0A0A0B0A0B0C0B0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F1010101110111211121112131314131415151615161817181A191B1A1B1C1B1C1C1D><2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A><9897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827><B3B2B2B1B1B0AFAFAEAEADACACABABAAA9A9A8A7A7A6A6A5A4A4A3A3A2A1A1A0A09F9E9E9D9D9C9B9B9A9A999898979696959594939392929190908F8F8E8D8D8C8C8B8A8A898988878786858584848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757474737372717170706F>4 %_Br<DADADADADADAD9D9D9D9D9D9D9D9D8D8D8D7D7D7D7D7D6D6D6D6D6D6D5D5D5D4D4D4D4D3D3D3D3D3D2D2D2D2D2D1D1D1D1D0D0D0D0D0D0D0D0CFCFCFCFCFCECECECECDCDCDCDCDCDCDCDCCCCCCCCCCCBCBCBCBCACACACACACAC9C9C9C8C8C8C8C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C4C4C4><3F3F3F3E3E3E3E3E3E3D3D3E3E3E3D3D3D3D3D3C3C3D3D3D3D3C3C3C3C3D3C3C3C3C3C3B3C3C3C3C3D3C3C3C3D3D3C3C3C3D3D3D3C3C3D3D3D3C3C3C3D3D3C3C3D3D3D3E3D3D3D3E3E3D3D3E3E3E3F3D3E3E3E3F3D3E3E3E3F3D3E3E3F3F403E3E3F3F403E3F3F3F403E3E3E3F3F3F3E3E3E><FDFBF8F6F5F2F0EEECEAE8E6E4E1E0DEDCDAD9D8D6D4D2D0CECDCBC9C7C6C5C3C1C0BEBDBBB9B8B6B4B3B1B0AEACABAAA8A6A4A2A1A09E9C9A979593918F8F8D8B8987858482807E7C7B7A7876747271706E6C6A6A6866656362615F5D5B595957555351504F4D4B494947454341403F3D3B><1B1C1C1A1A1A1A1A1A19191919191818181818161616161616151515151514141414141313131312121111111111101010100F0F0E0E0E0E0E0D0D0C0C0C0B0B0B0B0A0A09090909080808070707070606060605050504040404030303030302020202020201010101010101010101010000><1E1E1E1E1E1F1F1F1F1F1F1F1F1F20202020202020202121212121212121212222222222222222222323232323232323242424242424242424252525252525252525262626262626262627272727272727272728282828282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B><83838384848484848485858585858686868686878787878787888888888889898989898A8A8A8A8A8A8B8B8B8B8B8C8C8C8C8C8C8D8D8D8D8D8E8E8E8E8E8F8F8F8F8F8F90909090909191919191919292929292939393939394949494949495959595959696969696979797979797989898><4142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3>4 %_Br<15161718191B1B1D1D1F20212122232425262728292B2B2D2E2F3031333435363738393A3C3D3E3F4042434445464748494B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626365666768696A6B6C6D6E6F7072737475767778797A7B7C7D7E7F8081828384858687898A8B8C8D8F8F909192939495969798999A9B9C9D9E9F9FA1A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B4B5B5B6B7B8B9B9BABBBBBCBDBEBFBFC0C1C2C2C3C4C4C5C6C7C7C8C8C9CACBCBCCCDCDCECFCFD0D0D1D1D2D2D3D3D4D5D5D5D6D6D7D8D8D9D9DADA><000001000101010102010202020203020302030303030403040404040304040404050405050505060607060707080708080908090908090809090A090A090A0A0B0A0C0B0C0C0D0C0D0D0E0D0E0E0F0E0E0F0E0F0F100F1010111112111212131213131414151416151716161717181819181A191A1A1B1B1C1B1C1C1D1D1E1E1F1F201F202020212122212222232324232524252526262726272728282929282A292A2A2B2B2C2C2D2D2E2E2F2F303030303131323233333434333434353536363737383839393A3A3B3B3C3C3D3D3D3D3E3E3F3F><F1F1F1F1F1F0F1F0F1F1F1F1F2F1F2F2F3F3F4F4F5F5F5F6F7F7F8F9F9FAFAFBFCFCFDFDFDFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFDFD><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010102020202020202020203030303030304030404040404040504050505050606060606070707070808090809090A0A0B0B0B0B0C0C0D0D0E0E0F0E0E0F0F10101111121213131414151516161717181819191A1A1C1B><F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E><E9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D3D3D2D2D1D1D0D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9D9C9C9B9B9A9A9999989897979696959594949393929291919090908F8F8E8E8D8D8C8C8B8B8A8A8989888887878686858584848383><282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B2B2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F303030303030303030313131313131313132323232323232323233333333333333333434343434343434353535353535353535363636363636363637373737373737373738383838383838383939393939393939393A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3D3E3E3E3E3E3E3E3E3F3F3F3F3F3F3F3F3F40404040404040404141414141>4 %_Br<02020202020202020303030303030303030101010101010102020101010202020202020202020202020202020203030303030302030303030303030303030303030404040404040404040404040404050505050505050505050506060606060606070707070707070708080808090908080808080808090808080808080909090909090A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0E0E0E0E0E0F0D0E0E0E0E0E0F0F0F0F0F0F101010101010101010101011111111121212121212131212121313131313131414141414141515><FCFCFBFBFAFAF9F9F8F7F7F6F6F5F5F4F3F2F1F1F0EFEEEEEDECECEBEAE9E8E8E7E6E5E4E3E2E2E1E0DFDEDDDCDBDAD9D8D6D5D4D3D2D1D0D0CFCECDCCCAC9C8C7C6C5C3C2C1C0BEBDBCBBBAB9B7B6B5B3B2B0AFAEACABAAA8A7A6A4A3A2A09F9D9C9B999896959392908F8D8C8A8987868483817F7E7C7B797877757472716F6E6C6B696866656362605F5D5C5A595756555352504F4D4C4B4A4847454442413F3E3C3B393837353432302F2D2C2A2927252422211F1E1C1B191716151312100F0D0C0B0908070504030100><F9F9F9F9F9F9FAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFCFCFCFCFBFBFBFBFCFCFDFDFEFEFEFEFEFEFEFEFEFEFDFDFCFCFCFBFBFAFAFAF9F9F9F9F8F8F8F8F8F9F9F9F9FAFAFAFAFAFAFAFAFAFAF8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFBFBFBFBFCFCFCFCFDFDFDFDFDFCFCFCFBFBFAFAFAF9F9F8F8F7F7F7F7F7F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F6F6F6F5F5F5F5F5F4F4F3F3F2F2F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F1><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><ECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9><242424242424242424242424242424242424242424242424242425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252526262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272828282828282828282828282828282828282828282828282828>4 %_Br[0.003876 0.984894 0.158389 0.000031 0.92549 0.066667 0.486275 2 50 100 %_BS%_0.003876 0.984894 0.158389 0.000031 0.92549 0.066667 0.486275 2 50 100 Bs1 1 0.252811 0.114534 0.164706 0.152941 0.435294 2 50 80 %_BS%_1 1 0.252811 0.114534 0.164706 0.152941 0.435294 2 50 80 Bs0.767269 0.24448 0.23331 0.00174 0.168627 0.596078 0.701961 2 50 60 %_BS%_0.767269 0.24448 0.23331 0.00174 0.168627 0.596078 0.701961 2 50 60 Bs0.855528 0.246098 0.993683 0.10782 0.117647 0.513726 0.254902 2 50 40 %_BS%_0.855528 0.246098 0.993683 0.10782 0.117647 0.513726 0.254902 2 50 40 Bs0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 20 %_BS%_0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 20 Bs0.009003 0.988495 0.975158 0.001129 0.92549 0.117647 0.141176 2 50 0 %_BS%_0.009003 0.988495 0.975158 0.001129 0.92549 0.117647 0.141176 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 18)(Unnamed gradient 18) 1 6 Bd[<02020202020202020303030303030303030101010101010102020101010202020202020202020202020202020203030303030302030303030303030303030303030404040404040404040404040404050505050505050505050506060606060606070707070707070708080808090908080808080808090808080808080909090909090A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0E0E0E0E0E0F0D0E0E0E0E0E0F0F0F0F0F0F101010101010101010101011111111121212121212131212121313131313131414141414141515><FCFCFBFBFAFAF9F9F8F7F7F6F6F5F5F4F3F2F1F1F0EFEEEEEDECECEBEAE9E8E8E7E6E5E4E3E2E2E1E0DFDEDDDCDBDAD9D8D6D5D4D3D2D1D0D0CFCECDCCCAC9C8C7C6C5C3C2C1C0BEBDBCBBBAB9B7B6B5B3B2B0AFAEACABAAA8A7A6A4A3A2A09F9D9C9B999896959392908F8D8C8A8987868483817F7E7C7B797877757472716F6E6C6B696866656362605F5D5C5A595756555352504F4D4C4B4A4847454442413F3E3C3B393837353432302F2D2C2A2927252422211F1E1C1B191716151312100F0D0C0B0908070504030100><F9F9F9F9F9F9FAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFCFCFCFCFBFBFBFBFCFCFDFDFEFEFEFEFEFEFEFEFEFEFDFDFCFCFCFBFBFAFAFAF9F9F9F9F8F8F8F8F8F9F9F9F9FAFAFAFAFAFAFAFAFAFAF8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFBFBFBFBFCFCFCFCFDFDFDFDFDFCFCFCFBFBFAFAFAF9F9F8F8F7F7F7F7F7F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F6F6F6F5F5F5F5F5F4F4F3F3F2F2F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F1><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><ECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9><242424242424242424242424242424242424242424242424242425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252526262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262626262727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272828282828282828282828282828282828282828282828282828>4 %_Br<15161718191B1B1D1D1F20212122232425262728292B2B2D2E2F3031333435363738393A3C3D3E3F4042434445464748494B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626365666768696A6B6C6D6E6F7072737475767778797A7B7C7D7E7F8081828384858687898A8B8C8D8F8F909192939495969798999A9B9C9D9E9F9FA1A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B4B5B5B6B7B8B9B9BABBBBBCBDBEBFBFC0C1C2C2C3C4C4C5C6C7C7C8C8C9CACBCBCCCDCDCECFCFD0D0D1D1D2D2D3D3D4D5D5D5D6D6D7D8D8D9D9DADA><000001000101010102010202020203020302030303030403040404040304040404050405050505060607060707080708080908090908090809090A090A090A0A0B0A0C0B0C0C0D0C0D0D0E0D0E0E0F0E0E0F0E0F0F100F1010111112111212131213131414151416151716161717181819181A191A1A1B1B1C1B1C1C1D1D1E1E1F1F201F202020212122212222232324232524252526262726272728282929282A292A2A2B2B2C2C2D2D2E2E2F2F303030303131323233333434333434353536363737383839393A3A3B3B3C3C3D3D3D3D3E3E3F3F><F1F1F1F1F1F0F1F0F1F1F1F1F2F1F2F2F3F3F4F4F5F5F5F6F7F7F8F9F9FAFAFBFCFCFDFDFDFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFDFD><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010102020202020202020203030303030304030404040404040504050505050606060606070707070808090809090A0A0B0B0B0B0C0C0D0D0E0E0F0E0E0F0F10101111121213131414151516161717181819191A1A1C1B><F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E><E9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D3D3D2D2D1D1D0D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9D9C9C9B9B9A9A9999989897979696959594949393929291919090908F8F8E8E8D8D8C8C8B8B8A8A8989888887878686858584848383><282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B2B2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F303030303030303030313131313131313132323232323232323233333333333333333434343434343434353535353535353535363636363636363637373737373737373738383838383838383939393939393939393A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3D3E3E3E3E3E3E3E3E3F3F3F3F3F3F3F3F3F40404040404040404141414141>4 %_Br<DADADADADADAD9D9D9D9D9D9D9D9D8D8D8D7D7D7D7D7D6D6D6D6D6D6D5D5D5D4D4D4D4D3D3D3D3D3D2D2D2D2D2D1D1D1D1D0D0D0D0D0D0D0D0CFCFCFCFCFCECECECECDCDCDCDCDCDCDCDCCCCCCCCCCCBCBCBCBCACACACACACAC9C9C9C8C8C8C8C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C4C4C4><3F3F3F3E3E3E3E3E3E3D3D3E3E3E3D3D3D3D3D3C3C3D3D3D3D3C3C3C3C3D3C3C3C3C3C3B3C3C3C3C3D3C3C3C3D3D3C3C3C3D3D3D3C3C3D3D3D3C3C3C3D3D3C3C3D3D3D3E3D3D3D3E3E3D3D3E3E3E3F3D3E3E3E3F3D3E3E3E3F3D3E3E3F3F403E3E3F3F403E3F3F3F403E3E3E3F3F3F3E3E3E><FDFBF8F6F5F2F0EEECEAE8E6E4E1E0DEDCDAD9D8D6D4D2D0CECDCBC9C7C6C5C3C1C0BEBDBBB9B8B6B4B3B1B0AEACABAAA8A6A4A2A1A09E9C9A979593918F8F8D8B8987858482807E7C7B7A7876747271706E6C6A6A6866656362615F5D5B595957555351504F4D4B494947454341403F3D3B><1B1C1C1A1A1A1A1A1A19191919191818181818161616161616151515151514141414141313131312121111111111101010100F0F0E0E0E0E0E0D0D0C0C0C0B0B0B0B0A0A09090909080808070707070606060605050504040404030303030302020202020201010101010101010101010000><1E1E1E1E1E1F1F1F1F1F1F1F1F1F20202020202020202121212121212121212222222222222222222323232323232323242424242424242424252525252525252525262626262626262627272727272727272728282828282828282829292929292929292A2A2A2A2A2A2A2A2A2B2B2B2B2B><83838384848484848485858585858686868686878787878787888888888889898989898A8A8A8A8A8A8B8B8B8B8B8C8C8C8C8C8C8D8D8D8D8D8E8E8E8E8E8F8F8F8F8F8F90909090909191919191919292929292939393939394949494949495959595959696969696979797979797989898><4142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3>4 %_Br<C4C4C5C6C6C7C7C8C8C8C9C9CACACBCBCCCCCDCECECFCFD0D0D1D1D2D3D3D4D4D5D5D6D6D7D8D8D9D9DADBDBDCDCDDDDDEDEDFE0E0E1E2E3E3E5E6E6E7E7E8E8E9EAEAEBEBECEDEDEEEEEFEFF0F0F1F2F2F3F4F5F5F6F6F7F8F8F9FAFAFBFCFCFDFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><3E4042434547484A4C4D4F5052545557585A5C5D5F61636466686A6C6D6F71727476787A7B7E7F81838587888A8C8E8F91939597999B9D9FA1A5A7A9ACADAFB1B3B5B6B8BABBBEBFC1C3C5C7C9CBCDCED0D2D4D6D7D9DBDDDFE0E1E3E5E7E8E9ECEDEFF0F1F4F4F5F6F7F9FAFBFCFEFFFF><3B3C3B3C3B3B3C3B3B3A3B3B3A3B393A3B393A3B393A3839393838373838373836373836373636373636353637363637363635353634353434343333323334333332333433343333343334343334333435343534353534353435363637363738373838383938393B3A3C3B3D3E3E3F3F40><0001010101010101010101010101010202020202030303030303030304040405040505050505060606070607070707080808080909090A090A0A0A0B0A0B0C0B0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F1010101110111211121112131314131415151615161817181A191B1A1B1C1B1C1C1D><2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A><9897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827><B3B2B2B1B1B0AFAFAEAEADACACABABAAA9A9A8A7A7A6A6A5A4A4A3A3A2A1A1A0A09F9E9E9D9D9C9B9B9A9A999898979696959594939392929190908F8F8E8D8D8C8C8B8A8A898988878786858584848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757474737372717170706F>4 %_Br<FFFFFFFFFEFCFBFAF9F8F7F6F5F3F2F1F0EEEDECEBEAE8E8E7E5E4E3E2E1E0DEDDDCDAD9D7D6D5D4D2D1D0CECDCCCAC9C8C6C5C3C2C1C0BFBDBCBBBAB9B7B6B5B3B1B0AEADACAAA9A7A6A4A3A2A09F9D9C9B99999796959392908F8D8B8A888785848381807E7D7B7A79787675747271706F6E6C6B6A6866656362615F5E5D5C5B59585755545351504E4D4C4A49484746444342403E3D3C3A393736343332302F2E2D2B2A282725242221201E1D1B1A181715141312110F0E0D0B0A09070605040201><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFCFCFCFCFCFB><404040403F3F3F3E3D3D3C3C3C3C3C3B3B3B3B3B3B3B3B39393939393939393939393939393937373737373737363636363636363635353535353535353536363636353534343434343434343435353535353534343434343434343434343434343232323232323232323232323232323030303030303131313131323232333131313131313131313131313131312F2F2F302F2F2F2F2F2F2F303030302D2E2E2E2E2E2E2E2D2D2D2E2E2E2E2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2828282828282828><1D1D1E1E1E1E1E1E1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1B1B1B1B1B1A1A1A1A1A1A1A19191A1818191818181818181818181818181616161515151515141413131313131212121212121212121111111110100F0E0E0D0D0D0D0D0D0D0D0D0C0C0B0B0B0A0A0A0909090808080808080707060606060505050504040403030303030303030303030302020202020101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC><272727272726262626262626262625252525252525252524242424242424242323232323232323232222222222222222222121212121212121212020202020202020201F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A191919191919191918181818181818181817171717171717171716161616161616161615151515151515151514141414141414141313131313131313131212121212121212121111111111><6F6F6F6F6F6F6F6F70707070707070707070707070707071717171717171717171717171717172727272727272727272727272727273737373737373737373737373737374747474747474747474747474747475757575757575757575757575757676767676767676767676767676767777777777777777777777777777777878787878787878787878787878787979797979797979797979797979797A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7C7C7C7C7C7C7C7C>4 %_Br[0.009003 0.988495 0.975158 0.001129 0.92549 0.117647 0.141176 2 50 0 %_BS%_0.009003 0.988495 0.975158 0.001129 0.92549 0.117647 0.141176 2 50 0 Bs0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 20 %_BS%_0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 20 Bs0.855528 0.246098 0.993683 0.10782 0.117647 0.513726 0.254902 2 50 40 %_BS%_0.855528 0.246098 0.993683 0.10782 0.117647 0.513726 0.254902 2 50 40 Bs0.767269 0.24448 0.23331 0.00174 0.168627 0.596078 0.701961 2 50 60 %_BS%_0.767269 0.24448 0.23331 0.00174 0.168627 0.596078 0.701961 2 50 60 Bs1 1 0.252811 0.114534 0.164706 0.152941 0.435294 2 50 80 %_BS%_1 1 0.252811 0.114534 0.164706 0.152941 0.435294 2 50 80 Bs0.003876 0.984894 0.158389 0.000031 0.92549 0.066667 0.486275 2 50 100 %_BS%_0.003876 0.984894 0.158389 0.000031 0.92549 0.066667 0.486275 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 20)(Unnamed gradient 20) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 21)(Unnamed gradient 21) 0 5 Bd[<050505050506060606060607070707070707070707070606060607070707070707070707070707070707070808080808090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0A0A0A0A0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0F0F0F0F0F10101010101010111111111111101010101010111111111111111111121212121212121212121212131313131313131313131313131313131313131414141414141414141414141414141414><E3E2E2E1E0DFDEDDDCDBDAD8D7D6D5D4D3D2D1D0D0CFCECDCCCBCAC9C8C6C5C4C3C3C2C1C0BFBDBCBBB9B9B8B7B5B4B3B1B1B0AEADACAAA9A9A7A6A5A3A3A2A09F9E9E9C9B9998989695939392908F8F8D8C8A8A898886868583838280807E7C7C7B79787876767573737270706F6D6D6C6C6A6969676766646463636161605E5E5D5D5C5C5A5A5959575756565454535352525250504F4F4D4D4D4C4C4B4B4B4949474747464646454545454343434242424240404040403F3F3F3F3F3F3D3D3D3D3D3D><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFDFDFDFCFCFCFCFCFDFDFDFDFDFDFDFDFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC><00000001010101010101000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED><42434445464748494A4B4C4D4E4F50515253545555565758595A5B5C5D5E5F6061616263646566676869696A6B6C6D6E6F6F7071727374757576777879797A7B7C7D7D7E7F808181828384848586878788898A8A8B8C8D8D8E8F8F9091919293939495969697979899999A9B9B9C9D9D9E9E9FA0A0A1A1A2A3A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B0B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B8B9B9B9B9BABABABBBBBBBBBCBCBCBCBCBDBDBDBDBDBDBEBEBEBEBEBE><24242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323>4 %_Br<15151414141414141313131414141313131312121212121211111111101010101111111111111111111010101010100F0F0F0F0F0E0F0F0F0F0F0E0E0E0D0D0D0D0D0C0C0C0C0B0B0B0B0C0B0B0B0B0B0A0A0A0A0A0A0A09090909090A0A0B0B0B0A0A0A0A09090909090909090908080808080909080808080807070707070606060606060606060707070707070706060606060606060606060605050606060606060505050505><00010304050708090B0C0D0E101113141617191B1C1E1F2122242527292A2C2D2E303233353638393B3C3D3F404243454648494B4C4D4E505153545657585A5B5D5E606163646667696A6B6D6E707173747677797A7C7D7F8182848687888A8B8C8E8F9192949597989A9B9D9EA0A1A2A4A5A7A8A9ABACADAFB0B1B3B4B5B7B8BABBBCBDBFC0C1C2C3C4C5C7C8C9CACBCCCDCFD0D0D1D2D3D4D5D6D7D9DADBDCDDDEDFE0E1E2E2E3><F1F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F1F1F0F0F0F1F1F2F2F3F3F5F5F5F6F6F6F6F6F6F7F7F7F8F8F8F8F8F9F9F8F8F9F8F8F8F8F8F8F8F7F7F8F8F8F8F8F8F8F8F8F8F8F8F7F7F8F8F8F8F9F9F9FAFAFAFBFBFCFCFCFDFDFEFEFDFDFDFDFDFDFCFCFBFDFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFDFDFDFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFF><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101010101000000><F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEA><E9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4948474645444342><282828282828282828282828282828282828282828272727272727272727272727272727272727272727272727272727272727272727272727272727272727262626262626262626262626262626262626262626262626262626262626262626262626262626262626252525252525252525252525252525252525252525252525252525252525252525252525252525252525242424242424242424242424242424242424242424>4 %_Br<212122212121212120202020201F1F1F1F1F1E1F1F1F201E1E1E1E1E1E1D1E1E1E1F1D1E1E1E1E1D1D1D1D1D1C1D1D1D1E1C1D1D1D1D1C1C1C1C1C1B1C1C1C1C1B1B1B1B1C1B1B1B1B1B1C1A1B1B1B1B1A1A1A1A1A1919191A1A19191919191818181818171717171716171717171616171717161616171717161616161615161616161515151515141415><8684848381817F7E7E7C7B7B7978787674747371716F6E6E6C6C6B69696867676564646261615F5E5E5C5B5B595857565454535151504F4F4D4C4C4B49494846464544434241413F3F3D3C3C3B39393837373533333230302E2D2D2B2A292826262523232220201F1D1E1C1A1A19181816141413131210100F0E0E0C0B0B0A090907060605040402020100><1316181A1D1F2225272A2D2E313436393C3E414445484B4C4F515356585A5D5F616365686A6C6F70727577797C7E80828486898B8D8F90929497989A9D9EA0A2A3A5A7A8AAACADAFB0B2B4B5B7B8B9BABABCBDBEC0C2C3C4C5C6C7C8C9CACCCDCECFCFD0D1D3D4D5D6D7D8D9DADBDCDDDEDEDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9EBECECEDEEEFF0F0F1F1>0.000031<D7D7D7D8D8D8D8D8D9D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDCDCDDDDDDDDDDDEDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E3E4E4E4E4E4E5E5E5E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDEDEDEDEEEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2><8E8F8F9091919293939495959697979899999A9B9B9C9D9D9E9E9FA0A0A1A2A2A3A4A4A5A6A6A7A8A8A9AAAAABACACADAEAEAFB0B0B1B2B2B3B4B4B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C5C5C6C7C7C8C9C9CACBCBCCCDCDCECFCFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADADBDCDCDDDEDEDFE0E0E1E2E2E3E4E4E5E6E6E7E8E8E9><B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928>4 %_Br<C1C1C0C0BFC0BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B7B6B6B5B5B4B4B3B3B2B1B1B0AFAFAEADADACABABAAA9A8A7A7A6A5A4A3A3A2A1A0A09F9E9E9D9C9B9A99999897969594939291908F8E8D8C8C8B898887868584838281807F7E7D7C7B7A78787675747372706F6E6D6C6B6A6968676664636261605F5E5C5B5A59585755545352514F4E4D4C4B4948474645434241403E3D3C3B3A393736353332302F2E2D2C2A29282625242221><303030303133333333333434343435373737373737383838383A3A3B3B3B3B3B3C3C3E3E3E3F3F3F40404040424343434444444545454747484848494949494B4C4C4C4D4D4D4E4E4E505051515252525353535556565757585858595B5B5B5C5C5C5D5D5D5E606061616162626363636566666767676868696A6B6B6B6C6C6C6D6D6E6F707071717172727373757576767677777778797A7A7A7B7B7B7C7D7D7F8080808181818282828585858686><40404040403F3F3F3F3F3F3F3F3E3E3D3D3D3D3D3D3D3D3D3C3B3B3B3B3B3C3C3C3C3B3B3A3A3A3A3A3A3A3A38383838383838373737363636353535353534333332323232323231313030302F2F2F2F2F2E2E2D2D2D2C2C2E2E2D2D2C2B2B2B2B2B2B2A2A2A292928282828282727272525252525252525252323232322222222212120201F1F1F1E1E1E1D1D1C1B1B1B1B1C1C1C1C1A1A1A1A1A1919191918171716161616161515151413131313>0.000031<292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7><A0A0A0A0A09F9F9F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E9E9D9D9D9D9D9D9D9D9D9C9C9C9C9C9C9C9C9C9C9B9B9B9B9B9B9B9B9B9B9A9A9A9A9A9A9A9A9A999999999999999999999898989898989898989897979797979797979796969696969696969696959595959595959595959494949494949494949393939393939393939392929292929292929292919191919191919191909090909090909090908F8F8F8F8F8F8F8F8F8F8E8E8E8E8E><B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2>4 %_Br[0.077852 0.240574 0.986908 0.000031 0.929412 0.745098 0.137255 2 50 100 %_BS%_0.077852 0.240574 0.986908 0.000031 0.929412 0.745098 0.137255 2 50 100 Bs0.021393 0.890929 1 0.001801 0.917647 0.258824 0.141176 2 35.5263 79.7753 %_BS%_0.021393 0.890929 1 0.001801 0.917647 0.258824 0.141176 2 35.5263 79.7753 Bs0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 55.618 %_BS%_0.081971 0.001648 0.944121 0.000031 0.94902 0.913725 0.156863 2 50 55.618 Bs0.130159 0.525353 0.073854 0.000031 0.843137 0.556863 0.698039 2 50 44.9438 %_BS%_0.130159 0.525353 0.073854 0.000031 0.843137 0.556863 0.698039 2 50 44.9438 Bs0.756619 0.188022 0.252934 0.000031 0.160784 0.627451 0.709804 2 50 19.1011 %_BS%_0.756619 0.188022 0.252934 0.000031 0.160784 0.627451 0.709804 2 50 19.1011 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 396)(Unnamed gradient 396) 1 2 Bd[0.0000310.0000310.0000310.0000311114 %_Br[0.000031 0.000031 0.000031 0.000031 1 1 1 2 87 44.4444 %_BS%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 87 44.4444 Bs0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 %_BS%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 72)(Unnamed gradient 72) 0 2 Bd[<CDCDCECECFCFD0D0D0D1D1D1D2D3D3D3D4D4D5D5D5D5D6D6D6D7D7D7D8D8D8D8D8D8D9D9D9DADADADADBDBDBDBDBDBDCDCDCDCDCDCDCDCDCDCDCDCDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDCDCDCDBDBDBDADBDADADADADAD9D9D9D9D9D9D8D8D8D7D6D5D5D4D3D2D2D3D2D2D0D0CFCECDCCCBCACA><0A0B0D0E1012131516181A1B1C1E20212224252728292A2C2D2E2F30323334353638393A3B3C3D3E3F40414242434445464748494A4B4C4D4E4F5051525353545556575758595A5B5C5C5D5E5F5F606162636364656666676869696A6B6B6C6C6D6E6F7071727374757576767878797B7C7D7E7F80><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFAF6F6F3F3F1F0F0EFEEECE9E8E6E5E3E2E0><0000010101010101020202030303040404050506070808090A0B0B0C0D0E1011121314151718191A1B1D1E1F212223242627292A2C2D2F30323335383A3B3D3F4042444547494A4C4E4F51525456585A5C5E5F61636567696A6C6E70727476787A7C7E80828486888A8C8E90929496989A9C9EA0A2><1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A191919191919191919191919><ABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978777675747372716F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736><4B4B4A4A4949484848474746464645454444434343424241414040403F3F3E3E3D3D3D3C3C3B3B3B3A3A3939383838373736363535353434333333323231313030302F2F2E2E2D2D2D2C2C2B2B2A2A2A29292828282727262625252524242323222222212120201F1F1F1E1E1D1D1D1C1C1B1B1A1A>4 %_Br[0.792508 0.501488 0.879301 0.633875 0.098039 0.211765 0.101961 2 50 98.3146 %_BS%_0.792508 0.501488 0.879301 0.633875 0.098039 0.211765 0.101961 2 50 98.3146 Bs0.803433 0.038575 1 0.001282 0.117647 0.670588 0.294118 2 50 0 %_BS%_0.803433 0.038575 1 0.001282 0.117647 0.670588 0.294118 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Fish Pattern)(Fish Pattern) 77.5215 31.4824 155.3037 96.7959 [%AI3_Tile(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 96.7959 m157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 cf142.3477 90.6719 m142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C146.54 80.6494 142.3477 85.1709 142.3477 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 96.7959 m79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 cf64.5654 90.6719 m64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.874 64.1396 m13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c14.7539 66.1064 13.874 65.2266 13.874 64.1396 cf28.7969 58.0156 m28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c30.8857 52.1611 26.1396 47.416 20.2861 47.416 c19.9326 47.416 19.585 47.4355 19.2412 47.4688 C24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.6563 64.1396 m91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c95.5889 65.2266 94.709 66.1064 93.623 66.1064 c92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 cf106.5781 58.0156 m106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c103.9219 68.6152 108.668 63.8691 108.668 58.0156 c108.668 52.1611 103.9219 47.416 98.0684 47.416 c97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 31.4824 m157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 cf142.3477 25.3594 m142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C151.5596 35.9395 151.2109 35.959 150.8584 35.959 c145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C146.54 15.3359 142.3477 19.8574 142.3477 25.3594 cf%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 Xa 0.024933 0.726864 0.993835 0.001251 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 Xa 0.017121 0.992309 0.968872 0.001465 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 Xa 0.755703 0.620661 0.705135 0.81442 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 Xa 0.997345 0.869474 0.045106 0.002319 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 31.4824 m79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 cf64.5654 25.3594 m64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C73.7773 35.9395 73.4297 35.959 73.0762 35.959 c67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 20)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-4020.5 4739.3247 m-3806.8999 4739.3247 L-3806.8999 4731.5239 L-4020.5 4731.5239 L-4020.5 4739.3247 Ln0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-4020.5 4735.4248 m-4010.4856 4737.9165 -4003.6863 4739.2646 -3991.7007 4739.3247 c-3978.7185 4739.3896 -3913.6997 4739.3247 y-3848.6816 4739.3896 -3835.6997 4739.3247 v-3823.7124 4739.2646 -3816.9136 4737.9165 -3806.8999 4735.4248 C-3816.9136 4732.9331 -3823.7124 4731.5854 -3835.6997 4731.5239 c-3848.6816 4731.4585 -3913.6997 4731.5239 y-3978.7185 4731.4585 -3991.7007 4731.5239 v-4003.6863 4731.5854 -4010.4856 4732.9331 -4020.5 4735.4248 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 12)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7893 8611.8896 m-7795.2451 8611.8896 L-7795.2451 8591.1738 L-7893 8591.1738 L-7893 8611.8896 Ln0 O0 g1 XR-7795.5586 8607.208 m-7810.8247 8593.4199 -7828.5537 8614.3389 -7843.9277 8602.0557 C-7842.4199 8596.4033 -7836.7598 8603.3574 -7834.5176 8598.7109 C-7834.4341 8597.1104 -7837.6313 8598.6104 -7837.5127 8596.4902 C-7835.6245 8593.0811 -7830.8955 8593.5781 -7829.5664 8597.627 C-7823.3115 8595.6572 -7816.7734 8589.7139 -7810.7847 8591.5068 C-7809.2671 8592.8574 -7810.0708 8594.041 -7809.6211 8595.3174 C-7802.2871 8590.8818 -7793.4644 8600.0176 -7795.5586 8607.208 Cf-7839.2842 8608.8223 m-7839.8247 8609.1982 -7838.9277 8610.3096 -7839.2529 8610.7979 C-7841.3237 8610.0449 -7843.6919 8605.9678 -7845.4731 8603.2002 C-7845.2632 8604.7295 -7846.6641 8606.0537 -7848.0781 8603.8223 C-7848.2383 8603.0049 -7847.3667 8602.7178 -7847.6729 8601.8262 C-7848.8306 8600.2578 -7849.8472 8601.7432 -7850.7798 8601.5146 C-7851.3184 8600.751 -7851.6143 8600.1084 -7851.6816 8599.584 C-7845.5537 8596.7637 -7838.9263 8608.5664 -7832.7456 8608.9922 C-7832.9048 8612.0049 -7836.8555 8613.6904 -7839.2842 8608.8223 Cfuu0 XR-7836.1602 8603.5498 m-7851.0142 8597.0098 -7872.4731 8601.2314 -7888.3687 8601.209 c-7894.2988 8601.2021 -7883.8965 8601.2109 -7889.8267 8601.2158 cN0 O0 g-7833.8052 8602.3281 m-7851.1475 8595.1533 -7870.9341 8599.9453 -7889.0532 8599.876 C-7889.8608 8600.7617 -7890.6685 8601.6514 -7891.4751 8602.5361 C-7890.6973 8602.5361 -7889.9194 8602.5361 -7889.1421 8602.543 C-7888.3345 8601.6553 -7887.5273 8600.7686 -7886.7202 8599.8818 C-7887.3516 8599.8906 -7887.9844 8599.8848 -7888.6157 8599.8848 c-7890.3735 8599.8877 -7894.9165 8602.5518 -7891.0376 8602.5469 c-7890.4063 8602.5469 -7889.7734 8602.5537 -7889.1421 8602.543 c-7887.4155 8602.5146 -7882.8184 8599.9121 -7886.7202 8599.8818 c-7887.4976 8599.873 -7888.2759 8599.876 -7889.0532 8599.876 c-7890.8081 8599.875 -7895.3574 8602.5225 -7891.4751 8602.5361 c-7874.1177 8602.6045 -7855.1025 8597.9033 -7838.5151 8604.7686 c-7837.1035 8605.3535 -7831.8081 8603.1563 -7833.8052 8602.3281 c-7833.8052 8602.3281 lfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 2)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7875 8611.8896 m-7893 8611.8896 L-7893 8593.8896 L-7875 8593.8896 L-7875 8611.8896 Lnuu0 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-7874.9658 8604.3271 m-7893 8604.3271 L-7893 8601.4521 L-7874.9658 8601.4521 L-7874.9658 8604.3271 L-7874.9658 8604.3271 LfUu0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa-7874.9658 8603.5898 m-7891.5 8603.5898 L-7891.5 8602.1904 L-7874.9658 8602.1904 L-7874.9658 8603.5898 L-7874.9658 8603.5898 LfUu0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa-7874.9658 8603.2021 m-7890.5 8603.2021 L-7890.5 8602.5762 L-7874.9658 8602.5762 L-7874.9658 8603.2021 L-7874.9658 8603.2021 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 3)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7875 8611.8896 m-7893 8611.8896 L-7893 8593.8896 L-7875 8593.8896 L-7875 8611.8896 Lnuu0 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-7875 8604.3271 m-7893 8604.3271 L-7893 8601.4521 L-7875 8601.4521 L-7875 8604.3271 L-7875 8604.3271 LfUu0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa-7875 8603.5898 m-7893 8603.5898 L-7893 8602.1904 L-7875 8602.1904 L-7875 8603.5898 L-7875 8603.5898 LfUu0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa-7875 8603.2021 m-7893 8603.2021 L-7893 8602.5762 L-7875 8602.5762 L-7875 8603.2021 L-7875 8603.2021 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 4)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7892.8833 8611.8447 m-7801.0479 8611.8447 L-7801.0479 8607.5654 L-7892.8833 8607.5654 L-7892.8833 8611.8447 Ln0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-7892.6631 8609.165 m-7893 8609.2314 -7892.4814 8609.4209 -7892.8833 8609.2783 C-7892.8379 8609.1602 -7892.7725 8609.0713 -7892.6631 8609.165 Cf-7802.1675 8609.3311 m-7803.2524 8610.0938 -7804.6816 8609.3232 -7805.8701 8609.8096 C-7806.0098 8609.8418 -7805.8345 8609.3916 -7806.1484 8609.4922 C-7807.3008 8610.085 -7809.1162 8609.7314 -7810.5195 8609.2744 C-7810.4346 8609.1563 L-7810.7017 8609.0713 -7811.0283 8609.4609 -7811.3115 8609.4072 C-7811.3135 8609.3281 -7811.2207 8609.2959 -7811.2861 8609.1885 C-7811.3574 8609.4248 -7811.7983 8609.2979 -7811.9185 8609.4736 C-7812.0303 8609.3818 -7812.0195 8609.1943 -7812.1641 8609.0908 C-7812.3262 8609.3594 L-7812.7769 8609.999 -7813.4209 8609.3154 -7814.0361 8609.6455 C-7814.0063 8609.583 -7813.9453 8609.5342 -7813.9941 8609.4736 C-7814.9814 8609.8623 -7816.2168 8609.79 -7817.3208 8609.9326 C-7817.2769 8609.8369 -7817.2363 8609.665 -7817.3008 8609.5576 C-7817.3555 8609.8408 -7817.6963 8609.9121 -7817.9922 8609.9678 C-7818.1255 8609.6768 -7818.4995 8610.2334 -7818.8467 8610.0732 C-7818.8169 8610.0088 L-7819.0732 8610.3135 -7819.1973 8609.833 -7819.4053 8610.1982 C-7819.5684 8609.9697 L-7819.6807 8610.3799 -7819.9395 8609.7568 -7820.1514 8609.9658 C-7820.1445 8610.0498 L-7820.3442 8610.1494 -7820.4482 8609.9434 -7820.6338 8610.0127 C-7820.6514 8609.9658 L-7821.0854 8610.0732 -7821.3379 8609.8447 -7821.3271 8610.165 C-7821.4795 8609.9082 -7820.9063 8610.0479 -7821.1455 8609.6748 C-7822.5732 8610.0049 -7824.0459 8609.9404 -7825.4834 8609.9463 C-7825.6465 8609.8174 -7825.7505 8609.7783 -7825.7871 8609.6572 C-7825.9307 8609.7217 -7826.3281 8609.7158 -7826.4585 8609.8799 C-7826.4102 8609.873 -7826.5513 8609.7158 -7826.6274 8609.7002 C-7826.8887 8609.5791 -7826.9131 8610.0518 -7827.2002 8609.9082 C-7827.0859 8609.8232 -7827.0469 8609.7197 -7827.0854 8609.6006 C-7827.3301 8609.8506 -7827.6577 8609.8105 -7827.9473 8609.8906 C-7827.9023 8609.8369 -7827.8325 8609.8057 -7827.8433 8609.7041 C-7828.1602 8609.9873 -7828.4209 8609.6455 -7828.6982 8609.8242 C-7828.5947 8609.6396 L-7829.0415 8609.415 -7828.7266 8610.0264 -7829.1128 8609.8936 C-7829.02 8609.835 -7829.0527 8609.7617 -7829.0361 8609.6865 C-7829.3965 8610.0234 -7829.9795 8609.9121 -7830.3389 8610.0264 C-7830.3174 8610.001 -7830.3232 8609.9502 Y-7830.7148 8609.9922 -7831.1245 8609.8877 -7831.5552 8610.0342 C-7831.7119 8609.9521 -7831.5039 8609.583 -7831.9185 8609.6514 C-7831.9033 8610.0225 -7832.6221 8609.8037 -7832.3779 8610.2236 C-7832.7319 8610.1631 -7833.2925 8610.0234 -7833.5283 8610.1494 C-7833.3691 8610.0088 -7833.7007 8609.6953 -7833.4063 8609.665 C-7833.6289 8609.4395 L-7833.5957 8609.2881 -7833.3999 8609.4912 -7833.4707 8609.2998 C-7833.6182 8609.3154 -7834.0479 8609.4609 -7834.1797 8609.4014 C-7834.4531 8609.6289 -7834.7041 8610.0537 -7835.1465 8610.1006 C-7834.9385 8609.9561 -7835.2646 8609.6914 -7835.1235 8609.6279 C-7835.7407 8610.3389 L-7835.8877 8610.3564 -7835.7725 8610.0449 -7835.9854 8610.1426 C-7835.9746 8610.2412 -7836.0674 8610.3018 -7836.1318 8610.3818 C-7836.1875 8610.3389 -7836.7441 8610.4736 -7836.8081 8610.1084 C-7836.8735 8609.9658 -7836.5684 8610.0322 -7836.7314 8609.9014 C-7837.0029 8609.9053 -7837.0151 8610.0303 -7837.2871 8610.0361 C-7837.2925 8609.9873 L-7837.4717 8609.9326 -7837.8213 8610.1426 -7837.6265 8610.3447 C-7837.5015 8610.3564 -7837.6738 8610.125 -7837.4888 8610.2314 C-7837.6152 8610.4434 -7837.9312 8610.5029 -7838.2031 8610.5068 C-7838.1104 8610.4482 -7838.1216 8610.3506 -7838.0845 8610.2471 C-7838.4497 8610.5342 -7838.8369 8610.625 -7839.2451 8610.7441 C-7839.2515 8610.9189 -7839.0928 8610.4287 -7839.0327 8610.5205 C-7839.5557 8610.2793 -7840.1128 8610.8623 -7840.5479 8610.5098 C-7840.4766 8610.4785 -7840.5098 8610.7568 -7840.5146 8610.708 C-7840.7666 8610.6865 -7840.7549 8610.4346 -7840.9189 8610.5273 C-7840.9355 8610.3799 -7841.1255 8610.5752 -7841.2944 8610.6201 C-7841.3818 8610.7266 -7841.3384 8610.5479 -7841.1914 8610.5322 C-7841.4268 8610.6572 -7842.3691 8610.8838 -7842.9131 8610.6689 C-7842.9023 8610.7666 -7843.2471 8611.0273 -7843.3721 8611.0166 C-7843.3232 8610.7881 L-7843.4375 8610.6514 -7843.7422 8610.8076 -7843.7632 8610.6113 C-7844.0303 8610.8896 -7842.7344 8610.376 -7843.0957 8610.5898 C-7843.1895 8610.3994 -7843.5991 8610.9541 -7843.5215 8610.6426 C-7843.7725 8610.6514 -7844.0161 8610.9082 -7844.2559 8610.6943 C-7844.1865 8610.7314 -7844.0522 8610.377 -7844.2549 8610.3936 C-7844.6123 8610.4346 -7844.3564 8610.5029 -7844.6465 8610.5791 C-7844.8281 8610.6729 L-7844.8398 8610.8945 -7845.1475 8610.6426 -7845.0146 8610.8906 C-7845.0586 8610.708 -7845.5337 8611.0049 -7845.4971 8610.6357 C-7845.4473 8610.3447 L-7845.6016 8610.3662 -7845.7002 8610.6514 -7845.8213 8610.7793 C-7845.8418 8610.7529 -7845.8823 8610.6943 -7845.8745 8610.6475 C-7845.8994 8611.0928 -7846.2432 8610.6104 -7846.4268 8610.9541 C-7846.7505 8610.7998 -7847.2495 8610.9404 -7847.4023 8610.6631 C-7847.6514 8610.7979 -7847.8784 8610.958 -7848.1621 8610.8623 C-7848.1055 8610.8193 -7848.0283 8610.8076 -7848.0122 8610.7119 C-7848.1904 8610.5811 -7848.2344 8610.6982 -7848.3975 8610.7705 C-7848.3608 8610.7041 -7848.7539 8610.5098 -7848.9521 8610.3525 C-7849.1992 8610.4854 -7849.1143 8610.7256 -7849.1392 8610.8721 C-7849.3652 8610.4326 -7849.8379 8611.1553 -7850.1211 8610.7568 C-7850.0352 8610.6953 -7849.7598 8610.541 -7849.9658 8610.4307 C-7850.1919 8609.9922 -7850.4219 8610.7549 -7850.7861 8610.5439 C-7850.6968 8610.9082 L-7850.8594 8610.6826 -7851.2334 8611.1201 -7851.1963 8610.749 C-7851.3184 8610.8799 -7851.6265 8610.6279 -7851.5859 8610.9834 C-7852.1846 8610.6826 -7853.0425 8611.165 -7853.4102 8610.5273 C-7853.4961 8610.5869 -7853.7104 8610.5264 -7853.6665 8610.709 C-7853.5239 8610.9072 -7853.4673 8610.5674 -7853.4141 8610.7021 C-7853.4912 8610.7129 -7853.5078 8610.8105 -7853.5161 8610.8594 C-7853.7021 8610.7783 -7853.8486 8610.7529 -7853.6729 8610.457 C-7854.0869 8610.2373 -7854.1001 8611.0615 -7854.6274 8610.9229 C-7854.6035 8610.7754 -7854.6436 8610.7197 -7854.7979 8610.7432 C-7855.0903 8610.9951 L-7855.4312 8610.9365 -7855.2842 8610.6602 -7855.2925 8610.4111 C-7855.4746 8610.4541 -7855.6973 8610.4424 -7855.7803 8610.6279 C-7856.0015 8610.3154 L-7855.8398 8610.541 -7856.1514 8610.4658 -7856.2368 8610.5264 C-7856.1514 8610.4658 L-7856.1846 8610.3594 -7856.3955 8610.4248 -7856.5024 8610.4561 C-7856.4766 8610.6104 -7856.2617 8610.6729 -7856.1445 8610.7178 C-7856.2373 8610.8271 -7856.3823 8610.8018 -7856.5059 8610.9307 C-7856.4648 8610.6865 -7856.8027 8610.7568 -7856.9473 8610.7314 C-7857.1133 8610.6777 -7857.1348 8610.9502 -7857.1831 8610.9424 C-7857.1875 8610.8154 -7857.4541 8610.9209 -7857.3247 8610.7432 C-7857.2681 8610.7021 -7857.1953 8610.8662 -7857.1016 8610.7549 C-7857.2109 8610.6602 -7857.1982 8610.4395 -7857.4258 8610.6006 C-7857.5967 8610.7217 -7857.3818 8611.083 -7857.7061 8610.9287 C-7857.6211 8610.8682 -7857.6055 8610.7705 -7857.5391 8610.6826 C-7857.8433 8610.5557 L-7857.8564 8610.7783 L-7857.8975 8610.7217 -7857.8691 8610.7021 -7857.8877 8610.6729 C-7857.9785 8610.9072 -7858.3521 8610.7441 -7858.4209 8611.0088 C-7858.5742 8611.0322 -7858.7441 8610.8545 -7858.8906 8610.8281 C-7858.8623 8610.8096 L-7859.0415 8610.6777 -7859.2793 8610.7646 -7859.4297 8610.915 C-7859.4219 8610.8662 L-7859.5195 8610.8486 -7859.7505 8610.8838 -7859.8735 8611.0146 C-7860.1201 8610.8457 -7859.9561 8610.1738 -7860.2295 8610.4541 C-7860.48 8610.4609 -7860.6221 8610.8623 -7860.5215 8611.0049 C-7860.9717 8610.8545 -7861.4834 8611.2178 -7861.9009 8610.8721 C-7861.9658 8610.9609 -7861.9248 8611.0186 -7862.0586 8611.0713 C-7862.7197 8610.9834 -7863.4551 8611.335 -7863.9814 8610.8975 C-7863.79 8610.8037 -7863.9688 8610.6748 -7863.9727 8610.5479 C-7864.1309 8610.7471 -7864.1631 8610.3408 -7864.2197 8610.6826 C-7864.2041 8610.8838 -7864.2197 8610.9814 -7864.0337 8611.0625 C-7864.4282 8611.1709 -7865.0283 8611.1709 -7865.2471 8610.9834 C-7865.1377 8611.0762 -7865.2227 8611.1377 -7865.3086 8611.1982 C-7865.2803 8610.877 -7865.5713 8610.8281 -7865.7915 8610.9424 C-7865.8223 8611.1377 L-7865.9658 8610.9365 L-7866.0503 8610.999 -7866.0591 8611.3457 -7866.2773 8611.1592 C-7866.2891 8611.083 -7866.3018 8611.0059 -7866.3418 8610.9502 C-7866.5693 8611.1104 -7866.8906 8611.3818 -7867.1377 8611.2158 C-7867.3398 8610.9307 L-7867.4453 8610.9609 -7867.6235 8611.1338 -7867.4375 8611.2158 C-7867.8594 8611.0439 -7868.1309 8611.0225 -7868.2646 8610.7754 C-7868.9912 8611.377 -7870.0459 8611.4014 -7870.8906 8611.3584 C-7870.8652 8611.2119 L-7871.0923 8611.0752 -7870.9834 8611.4678 -7871.1416 8611.3662 C-7871.0684 8611.2266 -7871.3145 8611.0625 -7871.1362 8610.8906 C-7871.4609 8610.7373 -7871.5547 8611.1455 -7871.7656 8611.2119 C-7871.7979 8611.4033 -7871.5957 8611.0889 -7871.6367 8611.333 C-7871.6729 8611.4014 -7872.0859 8611.1826 -7872.1362 8611.4736 C-7872.2178 8611.3594 -7872.1543 8611.1455 -7872.1104 8611.0273 C-7872.3086 8611.1689 L-7872.5513 8610.8281 -7871.7559 8610.5615 -7872.0107 8610.1426 C-7872.1934 8610.1885 L-7872.3682 8609.8838 -7871.71 8609.8447 -7872.1689 8609.7402 C-7872.3682 8609.8838 -7872.5381 8610.3057 -7872.3608 8610.4346 C-7872.7754 8610.5146 -7872.5527 8611.1279 -7872.9985 8611.1025 C-7873.1201 8610.9326 -7872.6416 8611.0625 -7872.7275 8610.8232 C-7872.9375 8610.5889 -7873.1484 8610.9541 -7873.3354 8610.8721 C-7873.1279 8610.9814 -7873.3032 8611.2754 -7873.4375 8611.3281 C-7873.6641 8611.1914 -7873.29 8611.0537 -7873.6113 8611.0234 C-7873.6641 8611.1914 -7873.9595 8611.3174 -7873.7041 8611.4346 C-7873.8203 8611.8154 -7874.0381 8611.3281 -7874.2129 8611.624 C-7874.3174 8611.3564 -7873.8823 8611.0049 -7874.2354 8610.8711 C-7874.1792 8611.1289 -7874.6704 8611.2217 -7874.4839 8611.6045 C-7874.6221 8611.5303 -7874.6367 8611.3271 -7874.5361 8611.1689 C-7874.7334 8611.0098 -7875.0151 8611.6396 -7875.0801 8611.1279 C-7875.1479 8611.3916 L-7875.21 8611.3057 -7875.2983 8611.2412 -7875.3994 8611.0986 C-7875.5732 8611.0938 -7875.96 8611.4561 -7875.9443 8611.0576 C-7876 8611.0986 -7876.3975 8611.0811 -7876.2441 8611.3564 C-7875.9971 8611.5244 -7875.96 8611.1553 -7875.8223 8611.5273 C-7875.9971 8611.2236 -7876.1787 8611.5674 -7876.3213 8611.6689 C-7876.3447 8611.5146 L-7876.4297 8611.5752 -7876.6255 8611.541 -7876.6787 8611.708 C-7876.6133 8611.6201 -7876.6475 8611.5146 -7876.7148 8611.4775 C-7876.8042 8611.7119 L-7877.1494 8611.8281 -7876.8857 8611.2998 -7877.2217 8611.3682 C-7876.9663 8611.1865 L-7877.0225 8611.2256 -7877.1367 8611.0059 -7877.2979 8611.0791 C-7877.3604 8611.293 -7877.4775 8611.5498 -7877.5313 8611.7158 C-7877.7207 8611.8096 -7877.6162 8611.4746 -7877.8027 8611.6943 C-7877.5586 8611.4365 L-7877.5215 8611.3662 -7877.7231 8611.083 -7877.9761 8611.0889 C-7878.1377 8611.1631 -7878.3887 8611.4717 -7878.1338 8611.5889 C-7878.2607 8611.5928 -7878.4385 8611.4609 -7878.3379 8611.3057 C-7878.6255 8611.3799 -7878.2998 8611.5361 -7878.5479 8611.6689 C-7878.6494 8611.5264 -7878.9658 8611.3232 -7879.1563 8611.1162 C-7878.8975 8610.7578 L-7879.0693 8610.7549 L-7878.8467 8610.4678 -7879.1826 8610.5361 -7879.0566 8610.2334 C-7879.1743 8610.1865 -7879.3169 8610.2891 -7879.4307 8610.3682 C-7879.0864 8610.8525 -7879.8159 8611.0303 -7879.7158 8611.4717 C-7880.1875 8611.5928 -7880.0107 8610.3975 -7880.5024 8611.0889 C-7880.4219 8611.2041 -7880.6533 8611.54 -7880.3564 8611.4121 C-7880.6494 8611.3643 -7880.5557 8611.8555 -7880.9014 8611.6729 C-7880.6455 8611.4912 -7881.1763 8611.2256 -7880.8066 8610.9609 C-7880.8311 8611.1084 -7880.6001 8611.0732 -7880.5435 8611.0322 C-7880.6641 8610.8623 -7880.5186 8610.5869 -7880.8184 8610.5869 C-7881.0015 8610.6289 -7881.2524 8610.6377 -7881.2158 8610.8682 C-7881.2085 8611.1201 -7880.9365 8610.8408 -7881.0537 8611.0967 C-7881.4185 8611.1846 -7881.4795 8610.7998 -7881.6304 8611.249 C-7881.3999 8611.2129 -7881.3423 8611.4736 -7881.3467 8611.6475 C-7881.6143 8611.7529 L-7881.5625 8611.585 L-7881.9922 8611.4639 -7881.6895 8611.8896 -7882.1055 8611.8447 C-7882.3008 8611.5127 L-7882.2017 8611.2266 -7881.6953 8611.6396 -7881.7695 8611.1738 C-7882.04 8611.1553 -7882.1299 8611.3916 -7882.3848 8611.2705 C-7882.3281 8611.2314 -7882.2505 8611.2197 -7882.1943 8611.1777 C-7882.2915 8611.1631 -7882.3877 8610.5449 -7882.7734 8610.9072 C-7882.9727 8611.0479 -7882.8262 8611.0732 -7882.8311 8611.2471 C-7883.2656 8611.2998 -7883.3955 8611.4775 -7883.6753 8611.5049 C-7883.6177 8611.165 -7884.1699 8611.4717 -7883.8608 8611.124 C-7883.7188 8611.3232 -7883.0903 8611.3037 -7882.9365 8610.9785 C-7883.0947 8610.5762 -7882.5952 8611.0361 -7882.5024 8610.6279 C-7882.8506 8610.6182 -7882.8335 8610.2217 -7882.8896 8609.9609 C-7882.9863 8609.9434 -7883.0801 8610.0537 -7883.1377 8610.0938 C-7883.1787 8610.3389 -7883.0522 8610.335 -7883.0449 8610.5869 C-7883.4336 8610.5205 -7883.8081 8610.6572 -7884.0225 8610.8945 C-7884.1523 8610.7744 -7884.1113 8610.5303 -7883.9575 8610.5068 C-7884.4199 8610.5791 -7884.9141 8610.5449 -7885.3535 8610.4717 C-7885.0693 8610.8711 -7885.8433 8610.5654 -7885.6494 8610.8975 C-7885.4141 8610.9873 -7885.2119 8611.2705 -7885.3418 8611.4502 C-7885.4888 8611.4248 -7885.3369 8611.2754 -7885.3984 8611.1904 C-7885.5859 8611.4082 -7885.6895 8610.8408 -7885.8735 8611.1846 C-7885.4512 8611.0557 -7885.7915 8610.6982 -7885.7139 8610.3857 C-7886.0186 8610.5615 -7885.7007 8610.1631 -7886.0024 8610.1631 C-7886.3057 8610.3369 -7886.6787 8610.4736 -7887.0161 8610.541 C-7887.4399 8610.2441 -7888.0898 8610.5361 -7888.4683 8610.5479 C-7888.6665 8610.3896 -7888.5322 8610.0361 -7888.7471 8609.9746 C-7888.9995 8609.9814 -7888.5601 8610.3564 -7888.9336 8610.1943 C-7888.8975 8610.124 L-7889.0107 8610.2061 -7889.5825 8609.8838 -7889.6929 8610.3916 C-7889.5776 8610.0088 L-7889.6475 8609.9736 -7889.7119 8610.0615 -7889.7695 8610.1025 C-7889.7725 8609.9775 -7889.8535 8609.8643 -7889.7402 8609.7822 C-7889.9707 8609.5186 -7890.2241 8609.8242 -7890.4746 8609.835 C-7890.3135 8610.0615 L-7890.7422 8610.2393 -7891.0293 8610.0146 -7891.4443 8610.0938 C-7891.4316 8609.8721 L-7891.6787 8610.0049 L-7891.6182 8609.79 -7891.8447 8609.6514 -7891.9751 8609.8311 C-7891.3335 8609.2881 L-7891.1553 8609.4189 -7891.5283 8609.5557 -7891.4165 8609.7744 C-7891.3213 8609.9658 -7890.9375 8609.9053 -7890.8755 8609.6914 C-7891.0225 8609.667 -7891.0293 8609.7158 -7891.1436 8609.7959 C-7891.1919 8609.4873 -7890.9688 8609.499 -7890.8584 8609.293 C-7890.9355 8609.3057 -7891.0449 8609.2119 -7891.0615 8609.3096 C-7890.9102 8609.1592 -7890.7578 8609.1357 -7890.5059 8609.1279 C-7890.6763 8609.249 -7890.4131 8609.3193 -7890.4775 8609.4072 C-7890.4575 8609.1357 -7890.2168 8609.0518 -7889.9053 8609.1279 C-7889.6831 8609.4424 -7889.3208 8608.9258 -7888.96 8609.0127 C-7889.1064 8609.2881 -7889.2935 8609.5088 -7889.5127 8609.6201 C-7889.2861 8609.7578 -7889.2607 8609.6113 -7889.0337 8609.751 C-7888.9238 8609.5449 -7888.8457 8609.2314 -7888.5503 8609.1064 C-7888.5342 8609.3096 L-7888.2666 8609.2061 -7888.2666 8608.9053 -7887.9258 8608.9609 C-7887.3418 8609.0615 -7886.7407 8609.0615 -7886.2949 8609.0869 C-7886.2783 8609.2891 L-7886.0303 8608.8555 -7885.4521 8609.1289 -7885.1182 8608.9365 C-7884.5503 8609.1318 -7883.8848 8608.7432 -7883.5938 8609.0928 C-7882.5913 8608.9365 -7881.7148 8608.7842 -7880.6768 8608.8584 C-7880.8516 8609.1533 L-7880.6655 8608.9365 -7880.7305 8609.3232 -7880.5479 8609.2793 C-7880.7578 8609.0439 -7880.2949 8608.9736 -7880.1665 8608.793 C-7879.7041 8609.0225 -7879.1104 8608.7725 -7878.7007 8608.5654 C-7878.6846 8608.7686 L-7878.2705 8608.3877 -7877.7759 8608.7217 -7877.2598 8608.7842 C-7877.2007 8608.8682 -7877.1074 8609.0586 -7876.9536 8609.0361 C-7876.6738 8608.708 -7876.5273 8608.7314 -7876.1167 8608.5264 C-7875.8169 8608.5264 -7875.3301 8608.6074 -7875.0254 8608.7354 C-7873.8975 8608.2744 -7872.7456 8608.5693 -7871.5732 8608.292 C-7871.4888 8608.5303 L-7870.3521 8608.0205 -7868.9541 8608.4834 -7867.9839 8608.2217 C-7868.0776 8608.6289 L-7867.7734 8608.7549 -7867.3843 8608.5225 -7867.4619 8608.2334 C-7867.1567 8608.3584 -7866.7007 8608.0361 -7866.5068 8608.3711 C-7866.1953 8608.4463 -7866.1255 8608.1826 -7865.8662 8608.1279 C-7865.2422 8608.2822 -7865.0107 8608.2471 -7864.4224 8608.1709 C-7864.5684 8608.1455 L-7864.6328 8608.2354 -7864.6387 8608.4082 -7864.4922 8608.4346 C-7864.2725 8608.3213 -7863.6846 8608.5439 -7863.9033 8608.0576 C-7863.2754 8608.3389 -7862.4385 8607.8281 -7861.8271 8608.208 C-7861.8789 8608.0752 -7861.7246 8608.0498 -7861.6602 8607.96 C-7861.1089 8607.9541 -7860.5293 8608.2256 -7860.0898 8607.999 C-7860.0024 8608.0654 -7860.2295 8608.2256 -7860.0049 8608.2393 C-7859.8721 8608.1885 -7860.0024 8608.0654 -7859.8384 8607.9912 C-7858.9453 8607.7432 -7858.0303 8608.2471 -7857.2188 8608.1826 C-7855.7754 8607.9258 -7854.2695 8608.0557 -7852.8867 8608.0127 C-7852.9023 8608.1104 L-7852.4395 8607.7373 -7851.8159 8608.4922 -7851.4463 8607.9307 C-7851.3369 8608.0234 -7851.0283 8607.9746 -7851.1094 8608.1631 C-7850.7407 8607.8994 -7850.0771 8608.4111 -7849.5439 8608.0762 C-7849.5928 8608.0674 -7849.6211 8608.0869 -7849.6777 8608.1289 C-7849.1392 8608.3447 -7848.6641 8608.0498 -7848.0957 8608.2441 C-7848.1533 8608.2871 -7848.2583 8608.3174 -7848.2754 8608.415 C-7848.0557 8608.6025 -7847.7549 8608.0029 -7847.6348 8608.4736 C-7847.5088 8608.4697 -7847.5449 8608.2373 -7847.6221 8608.251 C-7846.3779 8608.4346 -7845.0498 8608.1338 -7843.7549 8608.0264 C-7842.8271 8608.3066 -7843.6982 8608.8193 -7842.9663 8608.4678 C-7842.9063 8608.5586 -7842.9229 8608.2881 -7842.9131 8608.3857 C-7842.6299 8608.2529 -7842.4717 8608.9111 -7842.2754 8608.665 C-7842.3564 8608.376 -7842.1445 8608.5029 -7842.1387 8608.3271 C-7841.5713 8608.5146 -7841.4575 8608.7754 -7841.0098 8608.5557 C-7841.0435 8608.708 L-7840.5186 8608.2783 -7839.9102 8608.5088 -7839.4673 8608.0127 C-7836.5728 8607.9229 -7833.7983 8607.6475 -7830.9761 8607.5898 C-7828.1865 8607.6846 -7825.4551 8607.4609 -7822.6221 8607.7256 C-7821.9585 8608.125 -7821.9087 8608.1143 -7821.1797 8607.9521 C-7821.2095 8608.0166 -7821.2549 8608.0322 -7821.2061 8608.0928 C-7821.1699 8607.7646 -7820.6929 8608.0615 -7820.6235 8607.749 C-7819.5762 8607.8096 -7818.6113 8607.7197 -7817.5337 8607.7178 C-7817.7041 8607.7529 -7817.7896 8608.0205 -7817.5869 8607.999 C-7817.3755 8607.79 L-7817.3408 8607.8818 L-7817.2021 8607.833 -7817.0513 8607.6709 -7817.1943 8607.5654 C-7814.4873 8607.2822 -7811.8242 8607.9404 -7809.1729 8607.8594 C-7808.5435 8607.9961 -7807.6475 8607.8711 -7806.9629 8607.8037 C-7804.9355 8608.2412 -7803.1079 8608.5938 -7801.0479 8608.2881 C-7801.3169 8609.1357 -7802.1675 8609.3311 Vf-7892.2578 8609.1318 m-7892.1855 8609.2959 -7891.9497 8609.3857 -7892.1377 8609.6045 C-7892.1611 8609.4502 -7892.2822 8609.2783 -7892.2578 8609.1318 Cf-7885.9619 8610.8193 m-7885.9536 8610.7705 -7885.8721 8610.8857 -7885.8521 8610.9121 C-7885.9297 8610.9248 -7886.0024 8611.0625 -7886.0645 8610.9775 C-7885.9854 8610.9658 -7885.9976 8610.8877 -7885.9619 8610.8193 Cf-7884.3521 8610.917 m-7884.3765 8611.0625 -7884.7207 8611.1777 -7884.9238 8611.1953 C-7884.3521 8610.917 Lf-7882.8521 8611.5186 m-7882.7227 8611.6416 -7882.7583 8611.709 -7882.9326 8611.7041 C-7882.9453 8611.6279 -7882.8877 8611.5889 -7882.8521 8611.5186 Cf-7882.7456 8611.1865 m-7882.6211 8611.1826 -7882.5591 8611.2686 -7882.4985 8611.3525 C-7882.5029 8611.2266 -7882.7871 8611.4307 -7882.7456 8611.1865 Cf-7879.4893 8611.6104 m-7879.4111 8611.5986 -7879.2417 8611.4775 -7879.1689 8611.6396 C-7879.2505 8611.5264 -7879.5498 8611.8242 -7879.4893 8611.6104 Cf-7877.9761 8611.3896 m-7877.9272 8611.3994 -7877.9072 8611.4258 -7877.8506 8611.3857 C-7877.7607 8611.4521 -7877.8555 8611.5586 -7877.9312 8611.5723 C-7877.9761 8611.3896 Lf-7850.4287 8610.8037 m-7850.5923 8610.876 L-7850.5684 8610.7314 L-7850.4287 8610.8037 Lf-7838.3574 8610.7959 m-7838.1943 8610.7041 -7838.2441 8610.9326 -7838.2168 8610.9541 C-7838.3643 8610.9697 -7838.1621 8610.7744 -7838.3574 8610.7959 Cf-7831.8486 8610.0674 m-7831.8984 8610.0713 L-7831.8818 8609.7725 L-7831.8486 8610.0674 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 5)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7875 8611.8896 m-7893 8611.8896 L-7893 8593.8896 L-7875 8593.8896 L-7875 8611.8896 Lnuu0 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-7882.5625 8611.8896 m-7885.4375 8611.8896 L-7885.4375 8603.3896 L-7885.4375 8602.3213 -7884.5684 8601.4521 -7883.5 8601.4521 C-7874.9165 8601.4521 L-7874.9165 8604.3271 L-7882.5625 8604.3271 L-7882.5625 8611.8896 L-7882.5625 8611.8896 LfUu0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa-7883.2998 8611.8896 m-7884.7002 8611.8896 L-7884.7002 8603.3896 L-7884.7002 8602.7285 -7884.1621 8602.1904 -7883.5 8602.1904 C-7874.9165 8602.1904 L-7874.9165 8603.5898 L-7883.2998 8603.5898 L-7883.2998 8611.8896 L-7883.2998 8611.8896 LfUu0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa-7883.6875 8611.8896 m-7884.3125 8611.8896 L-7884.3125 8603.3896 L-7884.3125 8602.9424 -7883.9482 8602.5762 -7883.5 8602.5762 C-7874.9165 8602.5762 L-7874.9165 8603.2021 L-7883.5 8603.2021 L-7883.6035 8603.2021 -7883.6875 8603.2871 -7883.6875 8603.3896 C-7883.6875 8611.8896 L-7883.6875 8611.8896 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 55)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7866.9727 8611.8896 m-7866.9727 8585.8613 L-7893 8585.8613 L-7893 8611.8896 L-7866.9727 8611.8896 Ln0 Ap0 R0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 XA1.125 w-7893 8594.5361 m-7866.9727 8594.5361 lS0.604547 0.617731 0.675929 0.546258 0.258824 0.223529 0.196078 XA-7893 8603.2139 m-7866.9727 8603.2139 lS0.600214 0.538903 0.636072 0.347112 0.341176 0.329412 0.290196 XA0.375 w-7893 8598.875 m-7866.9727 8598.875 lS0 O0.600214 0.538903 0.636072 0.347112 0.341176 0.329412 0.290196 Xa1 w-7871.5742 8598.9014 m-7871.3442 8598.6289 -7871.6914 8598.3438 -7872 8598.1328 c-7872.1118 8598.0557 -7872.5215 8598.2686 -7872.7466 8598.1025 c-7873.0439 8597.8848 -7873.1826 8597.7979 -7873.4824 8597.8037 c-7873.6455 8597.8076 -7874.0435 8597.9375 -7874.1895 8597.9678 c-7874.5679 8598.0439 -7874.8022 8598.2412 -7875.3672 8598.1445 c-7875.7344 8598.0811 -7875.8286 8597.9902 -7875.9233 8598.0381 c-7876.1118 8598.1797 -7876.2202 8598.4033 -7876.4258 8598.4521 c-7876.9575 8598.5791 -7877.3535 8598.623 -7877.8818 8598.6113 c-7878.3047 8598.6025 -7879.4185 8598.6709 -7880.2866 8598.5713 c-7880.6226 8598.5313 -7880.6025 8598.1064 -7880.7695 8598.1025 c-7880.8618 8598.1006 -7880.7646 8598.416 -7880.8306 8598.4365 c-7881.1694 8598.543 -7881.4702 8597.3926 -7881.6943 8597.4609 c-7881.8047 8597.4971 -7881.5562 8598.043 -7881.6729 8598.0713 c-7881.8975 8598.127 -7882.2178 8597.1084 -7882.4321 8597.1709 c-7882.5635 8597.208 -7882.2886 8597.6279 -7882.4375 8597.6953 c-7882.6655 8597.8008 -7882.9087 8596.9248 -7883.1064 8597.0234 C-7883.1543 8597.0713 -7882.7295 8597.8271 -7883.1685 8597.7686 c-7883.2871 8597.751 -7883.5054 8597.2031 -7883.5801 8597.2295 c-7883.6919 8597.2695 -7883.3535 8597.6914 -7883.4897 8597.8174 C-7883.7681 8598.0439 -7884.3711 8597.0527 -7884.4575 8597.124 c-7884.5791 8597.2256 -7884.1279 8597.9873 -7884.2695 8598.0557 C-7884.4497 8598.3193 -7885.0142 8597.4424 -7885.0889 8597.4912 c-7885.1777 8597.5498 -7884.9058 8597.9277 -7884.8799 8598.123 c-7884.8545 8598.3174 -7884.9966 8598.4512 -7885.2144 8598.3994 c-7885.4736 8598.3369 -7885.8696 8597.5313 -7885.9727 8597.625 C-7886.0791 8597.6807 -7885.8682 8597.9678 -7885.7954 8598.2021 c-7885.7583 8598.3174 -7885.8882 8598.4912 -7886.0298 8598.4912 c-7886.3135 8598.5391 -7886.6255 8597.8877 -7886.7065 8597.9922 c-7886.7524 8598.0518 -7886.5898 8598.3799 -7886.7295 8598.4775 c-7886.8994 8598.5957 -7887.3115 8598.1279 -7887.4521 8598.1826 C-7887.5361 8598.2314 -7887.4126 8598.4863 -7887.4927 8598.543 c-7887.7295 8598.709 -7888.0039 8598.3105 -7888.0513 8598.3584 C-7888.1167 8598.3809 -7888.1201 8598.4258 -7888.2793 8598.5303 c-7888.4736 8598.6572 -7888.5254 8598.7383 -7888.5425 8598.8545 c-7888.5654 8598.9727 -7888.3135 8599.2646 -7888.1655 8599.2393 c-7887.8223 8599.1797 -7887.8662 8599.7393 -7887.6328 8599.6055 c-7887.5679 8599.5693 -7887.6592 8599.1484 -7887.4199 8599.1553 c-7887.0488 8599.168 -7886.9858 8599.7109 -7886.7817 8599.7002 c-7886.6406 8599.6934 -7886.8521 8599.0732 -7886.6328 8599.1504 c-7886.4751 8599.2061 -7886.0063 8600.1914 -7885.9795 8600.0986 c-7885.8975 8599.832 -7886.0703 8599.2881 -7885.9409 8599.2979 c-7885.7568 8599.3125 -7885.5078 8600.207 -7885.2544 8600.3271 c-7885.1826 8600.3623 -7885.3774 8599.4902 -7885.1958 8599.4863 C-7885.0898 8599.5361 -7884.7578 8600.3389 -7884.6274 8600.3877 C-7884.5591 8600.3721 -7884.5879 8600.0146 -7884.5176 8599.9941 c-7884.4688 8599.9785 -7884.2817 8600.4551 -7884.21 8600.4121 c-7884.1055 8600.3525 -7884.2471 8599.8818 -7884.0889 8599.8125 c-7883.9175 8599.7383 -7883.4878 8600.7822 -7883.3486 8600.6865 c-7883.2769 8600.6396 -7883.3574 8600.0986 -7883.21 8600.1357 c-7883.0718 8600.168 -7882.9414 8600.5039 -7882.8081 8600.5322 c-7882.7295 8600.5479 -7882.7935 8600.0811 -7882.7495 8600.0625 c-7882.5889 8600.0049 -7882.2329 8600.5615 -7882.0688 8600.4121 c-7881.8584 8600.2246 -7881.9395 8599.8594 -7881.8345 8599.8721 c-7881.6274 8599.8945 -7881.4912 8600.1328 -7881.4146 8600.0732 c-7881.2642 8599.958 -7881.3281 8599.6689 -7881.0527 8599.582 c-7880.8975 8599.5322 -7880.7935 8599.8242 -7880.7495 8599.8193 c-7880.6738 8599.8174 -7880.6782 8599.7197 -7880.6665 8599.6143 c-7880.6328 8599.3506 -7880.6064 8599.2891 -7880.4878 8599.2666 c-7880.0854 8599.2432 -7879.5625 8599.1738 -7879.1807 8599.165 c-7878.6274 8599.1504 -7877.2607 8599.127 -7877.1182 8599.127 c-7877 8599.1025 -7876.7432 8599.2842 -7876.6689 8599.3506 c-7876.4678 8599.5352 -7876.2998 8599.749 -7875.9858 8600.0098 c-7875.8906 8600.0908 -7875.8081 8600.0703 -7875.7378 8600.0449 c-7875.5249 8599.9746 -7875.4585 8599.9229 -7875.2202 8599.8906 c-7874.9175 8599.8486 -7874.4272 8599.9385 -7874.1245 8600.0322 c-7873.6035 8600.1914 -7873.5264 8600.2139 -7873.0977 8600.165 c-7872.6992 8600.1191 -7872.0586 8600.0479 -7872.0479 8599.7002 c-7872.0415 8599.4854 -7871.9414 8599.333 -7871.5742 8598.9014 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 56)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7866.9722 8611.8896 m-7866.9722 8585.8623 L-7893 8585.8623 L-7893 8611.8896 L-7866.9722 8611.8896 Ln0 Ap0 R0.600214 0.538903 0.636072 0.347112 0.341176 0.329412 0.290196 XA0.375 w-7875.6455 8598.8789 m-7866.9736 8598.8789 lS-7879.9839 8611.8896 m-7879.9839 8603.2139 lS0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 XA1.125 w-7875.7202 8594.54 m-7866.9727 8594.54 lS-7884.3232 8611.8887 m-7884.3232 8602.5352 lS0.604547 0.617731 0.675929 0.546258 0.258824 0.223529 0.196078 XA-7875.6504 8611.8887 m-7875.6504 8609.4766 l-7872.9937 8609.2529 -7871.3096 8607.5498 v-7869.6064 8605.8232 -7869.3774 8603.2178 y-7866.9727 8603.2178 lS*u1 D0 O0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 Xa1 w-7883.8418 8596.0752 m-7883.8418 8596.1377 -7883.8218 8596.1807 -7883.7783 8596.1807 c-7883.6943 8596.1807 -7883.4634 8595.8438 -7883.3994 8595.8438 c-7883.3154 8595.8438 -7883.2729 8595.8857 -7883.2729 8595.9912 c-7883.2729 8596.0752 -7883.5264 8596.9824 y-7883.5264 8597.0234 -7883.5264 8597.0234 -7883.5049 8597.0234 c-7883.4414 8597.0234 -7883.0615 8596.4766 -7882.9351 8596.4766 c-7882.9146 8596.4766 -7882.8936 8596.4971 -7882.8936 8596.5186 c-7883.1675 8597.4248 -7883.1675 8597.6152 v-7883.1675 8597.6777 -7883.1675 8597.7002 -7883.1465 8597.7002 c-7883.1055 8597.7002 -7882.6826 8597.1289 -7882.5562 8597.1289 c-7882.5352 8597.1289 -7882.5137 8597.1504 -7882.5137 8597.1719 c-7882.5137 8597.2354 -7882.7666 8597.9736 -7882.7666 8598.1416 c-7882.7666 8598.1846 -7882.7666 8598.1846 -7882.7446 8598.1846 c-7882.6826 8598.1846 -7882.4722 8597.9736 -7882.4297 8597.9736 c-7882.4082 8597.9736 -7882.3882 8597.9951 -7882.3882 8598.0156 c-7882.3882 8598.0361 -7882.4927 8598.3945 -7882.4927 8598.4785 c-7882.4927 8598.501 -7882.4927 8598.501 -7882.4722 8598.501 c-7882.4297 8598.501 -7882.0918 8598.1416 -7882.0078 8598.1416 c-7881.9658 8598.1416 -7881.9233 8598.1846 -7881.9233 8598.2686 c-7881.9233 8598.417 -7882.1138 8599.1338 -7882.1138 8599.1758 c-7882.1138 8599.2598 -7882.0918 8599.3018 -7882.0498 8599.3018 c-7881.9658 8599.3018 -7881.7119 8598.9854 -7881.6494 8598.9854 c-7881.5854 8598.9854 -7881.5439 8599.0059 -7881.5439 8599.0703 c-7881.5854 8599.4912 L-7881.5854 8599.5557 -7881.5854 8599.5752 -7881.5654 8599.5752 c-7881.5225 8599.5752 -7881.2915 8599.2813 -7881.2065 8599.2813 c-7881.1006 8599.2813 -7881.1006 8599.7666 -7881.1006 8599.8281 c-7881.1006 8599.9346 -7881.0166 8600.0186 -7880.8896 8600.0186 c-7880.8057 8600.0186 -7880.4678 8599.7871 -7880.4473 8599.7871 c-7880.3623 8599.7871 -7880.3198 8600.2295 -7880.2568 8600.2295 c-7880.1943 8600.2295 -7879.9199 8600.1025 -7879.8564 8600.1025 c-7879.6455 8600.1025 -7879.6035 8600.1885 -7879.6035 8600.3564 c-7879.6255 8600.5039 L-7879.6255 8600.5449 -7879.6035 8600.5449 -7879.5835 8600.5449 c-7879.4985 8600.5449 -7879.2241 8600.2705 -7879.1392 8600.2705 c-7878.9287 8600.2705 -7876.8198 8602.3389 -7876.5454 8602.6113 c-7876.3984 8602.7793 -7876.3984 8603.0762 -7876.3984 8603.2031 c-7876.3984 8604.0674 -7876.3984 8604.1514 -7876.2295 8604.2354 c-7875.5977 8604.4893 -7875.5127 8604.6367 -7874.7334 8605.9229 c-7874.6479 8606.0703 -7873.7407 8606.6826 -7873.5942 8606.6826 c-7873.4878 8606.6826 -7873.1094 8606.4287 -7873.0239 8606.4287 c-7872.9194 8606.4287 -7872.8135 8606.4922 -7872.8135 8606.6602 c-7872.8135 8607.1025 -7873.3408 8607.6104 -7873.9312 8607.6104 c-7874.7534 8607.6104 -7875.0913 8606.9121 -7875.1338 8606.5146 c-7875.1543 8606.3662 -7875.2393 8606.2813 -7875.3447 8606.2813 c-7875.3862 8606.2813 -7875.4287 8606.3018 -7875.4702 8606.3662 c-7875.9561 8607.167 -7876.9473 8607.6104 -7877.7065 8607.6104 c-7878.7393 8607.6104 -7879.8774 8606.9775 -7880.3418 8606.7041 c-7880.7842 8606.4512 -7881.4814 8606.2813 -7881.8809 8606.2813 c-7882.3242 8606.2813 -7882.3662 8606.4287 -7882.3662 8606.6826 c-7882.3662 8606.8301 -7881.9023 8607.2705 -7881.9023 8607.3994 c-7881.9023 8607.5254 -7882.0498 8607.6104 -7882.4082 8607.6104 c-7882.8936 8607.6104 -7883.5679 8606.8926 -7883.5679 8606.1133 c-7883.5679 8605.501 -7882.7666 8604.9746 -7882.3022 8604.9746 c-7881.3755 8604.9746 -7881.0942 8605.333 -7880.5264 8605.7969 c-7880.4414 8605.8594 -7880.3774 8605.8818 -7880.3359 8605.8818 c-7880.1895 8605.8818 -7880.1895 8604.7842 -7880.1895 8604.6592 c-7880.1895 8604.5098 -7880.2729 8604.4473 -7880.3774 8604.4473 c-7882.7822 8604.4473 -7887.6592 8603.2236 -7889.3672 8597.0674 c-7889.4297 8596.8555 -7889.5361 8596.751 -7889.6406 8596.751 c-7889.7881 8596.751 -7890.7793 8597.5938 -7890.7793 8599.1758 c-7890.7793 8601.0098 -7889.5767 8601.9785 -7888.9873 8601.9785 c-7888.8398 8601.9785 -7888.6494 8601.959 -7888.6494 8601.8105 c-7888.6494 8601.748 -7888.6929 8601.6846 -7888.7759 8601.5791 c-7889.1143 8601.2432 -7889.3672 8600.6094 -7889.3672 8600.293 c-7889.3672 8600.0811 -7889.2607 8599.9121 -7889.1143 8599.9121 c-7888.9033 8599.9121 -7888.5654 8600.8623 -7888.46 8601.0098 c-7888.3335 8601.2207 -7887.9546 8601.6006 -7887.2378 8602.1279 c-7886.4995 8602.6533 -7885.0654 8603.9609 -7885.0654 8605.2266 c-7885.0654 8606.5986 -7886.1191 8607.5049 -7886.9209 8607.5049 c-7887.7007 8607.5049 -7888.6714 8606.9775 -7889.0713 8606.4922 c-7889.7041 8605.7549 -7890.3154 8605.1846 -7890.8218 8605.1846 c-7891.1592 8605.1846 -7891.3066 8605.3945 -7891.3066 8605.6064 c-7891.3066 8605.9434 -7891.0537 8606.1758 -7890.5479 8606.2178 c-7889.9575 8606.2607 -7889.8936 8606.6826 -7889.8936 8607.0186 c-7889.8936 8607.293 -7890.4209 8607.6104 -7890.8433 8607.6104 c-7891.4751 8607.6104 -7892.2974 8606.9121 -7892.2974 8605.0801 c-7892.2974 8603.582 -7891.0537 8603.1191 -7890.5679 8603.1191 c-7890.1265 8603.1191 -7889.4722 8603.2031 -7889.0928 8603.54 c-7887.8066 8604.7432 -7887.1318 8604.9521 -7886.5835 8604.9521 c-7886.3721 8604.9521 -7886.2881 8604.9521 -7886.2881 8605.1006 c-7886.2881 8605.417 -7887.0474 8605.6064 -7887.1318 8605.6279 c-7887.3423 8605.6904 -7887.5103 8605.9229 -7887.5103 8606.1338 c-7887.5103 8606.6191 -7887.2378 8606.6396 -7886.8774 8606.6396 c-7886.5215 8606.6396 -7885.8042 8606.2813 -7885.8042 8605.0801 c-7885.8042 8604.0889 -7886.9424 8602.9287 -7887.4058 8602.6973 c-7887.7007 8602.5273 -7888.5874 8602.5498 -7888.9458 8602.5068 c-7889.6406 8602.4209 -7891.4121 8601.4746 -7891.4121 8598.9854 c-7891.4336 8597.5723 -7890.1265 8596.2441 -7889.8511 8596.0557 c-7889.6826 8595.9482 -7889.5986 8595.8223 -7889.5986 8595.6533 c-7889.5986 8595.4424 -7889.6626 8592.5117 -7889.9995 8592.5117 c-7890.4424 8592.5117 -7890.5054 8592.5117 -7890.5054 8592.7031 c-7890.21 8593.7979 -7890.21 8594.0303 v-7890.21 8594.3457 -7890.4424 8595.8223 -7891.3066 8595.8223 c-7891.5806 8595.8223 -7892.0449 8595.5898 -7892.0449 8595.2744 c-7892.0449 8594.9785 -7891.3486 8593.7773 -7891.3486 8593.5029 c-7891.3486 8593.0176 -7891.3921 8592.9971 -7892.0654 8592.3857 c-7892.2559 8592.2383 -7892.3193 8592.1113 -7892.3193 8591.9209 c-7892.3193 8591.7529 -7892.2134 8591.625 -7892.0449 8591.625 c-7891.8975 8591.625 -7891.3281 8591.9014 -7891.2017 8591.9209 c-7891.0752 8591.9209 -7890.8433 8591.9424 -7890.6538 8591.9424 c-7890.2734 8591.9424 -7890.0845 8591.8154 -7890.0845 8591.6895 c-7890.0845 8591.457 -7890.0845 8590.7832 -7890.9263 8589.3271 c-7891.1167 8588.9902 -7892.2974 8587.6621 -7892.2974 8587.3242 c-7892.2974 8587.1553 -7892.2134 8587.1357 -7892.1089 8587.1357 c-7891.9185 8587.1357 -7891.4966 8587.5566 -7891.3706 8587.7041 c-7890.1265 8589.0322 -7889.3042 8590.4658 -7888.9238 8591.7314 c-7888.8398 8592.0479 -7888.7344 8591.9639 -7888.5654 8591.9854 c-7886.4155 8592.4912 -7884.3271 8595 -7884.3271 8595.0215 c-7884.4326 8595.2949 -7884.4326 8595.3584 v-7884.4326 8595.4854 -7884.3271 8595.5068 -7884.3057 8595.5068 c-7884.2432 8595.5068 -7884.0527 8595.2949 -7884.0103 8595.2949 c-7883.9058 8595.2949 -7883.7783 8595.3799 -7883.7783 8595.5273 C-7883.8418 8596.0752 lf0 D-7887.1104 8594.5791 m-7886.5215 8594.5791 -7886.0986 8594.6846 -7885.6982 8594.958 c-7885.6553 8594.9785 -7885.6138 8595 -7885.5928 8595 c-7885.5498 8595 -7885.5498 8594.9785 -7885.5498 8594.9365 c-7885.5498 8594.5146 -7887.4272 8592.5557 -7888.5654 8592.5557 c-7888.6289 8592.5557 -7888.6714 8592.5967 -7888.6714 8592.6592 c-7888.6714 8592.8496 -7888.5874 8594.8525 -7888.2495 8594.8525 c-7888.1865 8594.8525 -7888.1016 8594.8311 -7888.0386 8594.79 c-7887.7007 8594.6416 -7887.4902 8594.5791 -7887.1104 8594.5791 cf-7886.5835 8597.3408 m-7886.5835 8596.9189 -7886.5625 8596.4551 -7885.8662 8596.4551 c-7885.2334 8596.4551 -7884.6431 8597.1094 -7884.4961 8597.2568 c-7884.4326 8597.2988 -7884.3906 8597.3193 -7884.3486 8597.3193 c-7884.3271 8597.3193 -7884.2847 8597.2773 -7884.2847 8597.2354 c-7884.2847 8596.792 -7885.6553 8595.127 -7887.0049 8595.127 c-7887.2578 8595.127 -7888.2705 8595.2949 -7888.2705 8595.8438 c-7888.2705 8596.0967 -7887.8906 8597.4678 -7887.2793 8598.543 c-7885.9087 8601.0313 -7881.7119 8602.5898 -7879.8145 8602.5898 c-7878.9072 8602.6113 -7878.6118 8602.2959 -7878.4863 8602.2744 c-7878.4648 8602.2744 -7878.4438 8602.2529 -7878.4233 8602.2529 c-7878.3174 8602.2529 -7878.1904 8602.3174 -7878.1904 8602.4648 c-7878.1904 8602.4863 -7878.2119 8602.4863 v-7878.3594 8603.624 -7878.4014 8604.0254 -7878.4014 8605.2891 c-7878.4014 8606.6826 -7878.4014 8606.8086 -7877.4321 8606.8086 c-7876.1455 8606.8086 -7875.8506 8605.7334 -7875.8506 8605.501 c-7875.8506 8605.0801 -7876.4399 8604.7842 -7876.5889 8604.7842 c-7876.7358 8604.7842 -7876.9058 8604.8906 -7876.9058 8605.0801 c-7876.9058 8605.375 -7876.9473 8605.5225 -7877.2207 8605.5225 c-7877.4951 8605.5225 -7877.4951 8605.1641 -7877.4951 8605.0576 c-7877.4951 8604.8057 -7877.3896 8604.5527 -7877.1782 8604.4258 c-7876.7998 8604.1729 -7876.7998 8603.7725 -7876.7998 8603.5615 c-7876.7998 8603.4561 -7876.7998 8603.3281 -7876.8198 8603.2236 c-7876.8418 8603.0557 -7878.7817 8601.0098 -7879.0977 8601.0098 c-7879.2446 8601.0098 -7879.5615 8601.1563 -7880.4258 8601.1563 c-7882.5767 8601.1563 -7883.5474 8599.4287 -7883.7378 8598.9014 c-7883.9897 8598.1846 -7884.7915 8597.8887 -7885.0225 8597.8887 c-7885.2129 8597.8887 -7885.2129 8597.9307 -7885.2129 8598.332 c-7885.2129 8598.417 -7885.4238 8598.7529 y-7885.4238 8598.9434 -7884.3906 8599.1953 -7884.3906 8599.3857 c-7884.3906 8599.5557 -7884.5801 8599.5752 -7884.7271 8599.5752 c-7884.8115 8599.5752 -7885.8882 8599.5752 -7886.3306 8598.7529 c-7886.5415 8598.3525 -7886.5835 8597.7842 -7886.5835 8597.3408 cf1 D-7882.4927 8595.085 m-7882.4927 8595.041 -7882.5137 8595.0215 -7882.5352 8595.0215 c-7882.5986 8595.0215 -7882.7666 8595.3584 -7882.8506 8595.3584 c-7882.9146 8595.3584 -7882.9995 8595.2744 -7883.0415 8595.168 c-7883.0615 8595.085 -7883.1255 8594.6201 -7883.21 8594.6201 c-7883.2524 8594.6201 -7883.4209 8594.8525 -7883.4634 8594.8525 c-7883.6104 8594.8525 -7883.7158 8594.6201 -7883.7158 8594.4111 c-7883.7158 8594.3047 -7883.7783 8594.3047 -7883.9263 8594.3047 c-7884.5166 8594.3047 -7886.1406 8592.1328 -7886.5625 8590.3818 c-7886.6055 8590.2139 -7886.5835 8590.0664 -7886.8994 8589.96 c-7889.0713 8589.2236 -7891.5176 8587.0713 -7891.5176 8586.9453 c-7891.5176 8586.7979 -7891.4336 8586.7139 -7891.3066 8586.7139 c-7891.2432 8586.7139 -7891.1592 8586.7139 -7890.6538 8587.0498 c-7889.7681 8587.6406 -7887.7217 8588.9277 -7886.8994 8588.9277 c-7886.6265 8588.9277 -7886.6055 8588.5693 -7886.6055 8588.3154 c-7886.6055 8588.125 -7886.6265 8587.8936 -7886.6265 8587.7471 c-7886.6465 8587.4727 -7886.9634 8587.1553 -7886.9634 8586.9873 c-7886.9634 8586.8398 -7886.8154 8586.7344 -7886.6465 8586.7344 c-7886.4575 8586.7344 -7886.3306 8586.7559 -7886.1606 8586.9453 c-7885.8662 8587.2822 -7885.7402 8587.4307 -7885.4238 8587.4307 c-7885.1914 8587.4307 -7884.1377 8586.7139 -7883.8838 8586.7139 c-7883.5679 8586.7139 -7883.1895 8587.1982 -7883.1895 8587.4941 c-7883.1895 8588.2314 -7884.0942 8588.8223 -7884.6431 8588.8223 c-7885.0225 8588.8223 -7885.4438 8588.6953 -7885.6353 8588.4639 c-7885.6982 8588.3994 -7885.7607 8588.3584 -7885.8242 8588.3584 c-7885.9937 8588.3584 -7886.1191 8588.8223 -7886.1191 8588.8643 c-7886.1191 8589.2871 -7883.2729 8589.3486 -7882.9146 8589.3486 c-7882.7666 8589.3486 -7882.6401 8589.2646 -7882.5352 8589.0957 c-7882.3447 8588.8018 -7881.1855 8587.5791 -7879.6255 8587.5791 c-7877.79 8587.5791 -7876.0825 8588.8418 -7876.0825 8590.7402 c-7876.0825 8590.8457 -7876.1245 8591.3936 -7876.1245 8591.416 c-7876.1245 8591.4785 -7875.0063 8593.2285 -7873.6782 8593.2285 c-7872.6245 8593.2285 -7872.2656 8592.6396 -7872.2656 8592.1533 c-7872.2656 8591.9209 -7872.3711 8591.2686 -7872.8984 8591.2686 c-7873.1094 8591.2686 -7873.2144 8591.4785 -7873.2144 8591.8584 c-7873.2144 8591.9424 -7873.0039 8592.3223 -7873.0039 8592.4277 c-7873.0039 8592.4697 -7873.0239 8592.4912 -7873.0879 8592.4912 c-7873.4258 8592.4912 -7873.9521 8592.1328 -7874.1846 8591.4785 c-7874.4595 8590.7617 -7874.8594 8590.0664 -7875.1958 8589.665 c-7875.5127 8589.3066 -7875.6182 8588.7158 -7875.6182 8588.3789 c-7875.6182 8587.8936 -7875.1338 8586.7344 -7873.4878 8586.7344 c-7872.2871 8586.7344 -7871.4434 8587.4727 -7871.4434 8588.084 c-7871.4434 8588.6953 -7871.7598 8589.0752 -7872.2026 8589.0752 c-7872.6455 8589.0752 -7872.9824 8588.7373 -7872.9824 8588.3994 c-7872.9824 8587.7256 -7873.1514 8587.5791 -7873.4878 8587.5791 c-7873.6992 8587.5791 -7873.8896 8587.7041 -7873.8896 8588.0205 c-7873.8896 8588.2529 -7873.8896 8588.6318 -7872.3711 8589.8975 c-7871.8857 8590.2979 -7871.4214 8590.9951 -7871.4214 8591.7744 c-7871.4214 8592.5342 -7872.4561 8593.7344 -7873.6362 8593.7344 c-7874.8594 8593.7344 -7875.6401 8592.9551 -7876.2515 8592.2383 c-7876.5454 8591.9014 -7877.9814 8590.2139 -7878.0439 8590.1914 c-7878.2334 8590.0439 -7878.3174 8589.9189 -7878.3174 8589.792 c-7878.3174 8589.6865 -7878.2119 8589.5811 -7878.0854 8589.5811 c-7877.8535 8589.5811 -7876.9058 8590.5303 -7876.8198 8590.5303 c-7876.7568 8590.5303 -7876.7153 8590.4658 -7876.7153 8590.3818 c-7876.7153 8589.623 -7877.8535 8588.1475 -7879.6255 8588.1475 c-7881.1006 8588.1475 -7881.9863 8589.2646 -7881.9863 8589.3066 c-7881.9863 8589.4336 -7881.8394 8589.5586 -7881.5225 8589.623 c-7877.6426 8590.3613 -7874.3955 8593.9111 -7874.3955 8598.5273 c-7874.3955 8598.6338 -7874.2256 8598.6602 -7874.0786 8598.6602 c-7873.7202 8598.6602 -7873.0879 8598.7393 -7873.0879 8598.4658 c-7873.0879 8598.3594 -7873.1294 8598.2334 -7873.1934 8598.1064 c-7873.5518 8597.5361 -7873.8682 8597.3623 -7873.8682 8596.4111 c-7873.8682 8595.9482 -7873.4878 8595.4209 -7872.8984 8595.4209 c-7871.8657 8595.4209 -7871.4214 8596.4551 -7871.4214 8596.6865 c-7871.4214 8596.8555 -7871.5073 8596.9189 -7871.5903 8596.9189 c-7871.7178 8596.9189 -7872.2241 8596.3916 -7872.3711 8596.3916 c-7872.5615 8596.3916 -7872.7085 8596.4336 -7872.7085 8596.9189 c-7872.7085 8597.2568 -7871.4214 8600.9678 -7871.4214 8601.7686 c-7871.4214 8602.3389 -7871.7598 8603.0352 -7872.6455 8603.54 c-7872.6875 8603.5615 -7872.7085 8603.582 -7872.7085 8603.624 c-7872.7085 8603.708 -7872.5615 8603.8145 -7872.4126 8603.8555 c-7871.8018 8604.0254 -7871.4214 8604.1309 -7871.4214 8605.0801 c-7871.4214 8605.4385 -7871.7598 8606.1133 -7872.0127 8606.1133 c-7872.2026 8606.1133 -7872.2026 8606.0703 -7872.2026 8605.7119 c-7872.2026 8605.5645 -7872.2446 8605.459 -7872.3926 8605.3535 c-7872.7085 8605.1426 -7872.7295 8605.1006 -7872.8135 8604.6162 c-7872.8774 8604.2998 -7873.0039 8604.2139 -7874.1426 8603.582 c-7874.5854 8603.3086 -7874.6904 8603.0762 -7874.7744 8602.8447 c-7874.8594 8602.6533 -7874.9233 8602.6533 -7875.4287 8602.6533 c-7875.9561 8602.6533 -7878.5073 8599.9346 -7878.5073 8599.8076 c-7878.5073 8599.7441 -7878.3809 8599.4492 -7878.3809 8599.3857 c-7878.3809 8599.3232 -7878.4014 8599.2813 -7878.4438 8599.2813 c-7878.4863 8599.2813 -7878.6338 8599.4912 -7878.6758 8599.4912 c-7878.7817 8599.4912 -7878.7817 8599.3018 -7878.7817 8599.1533 c-7878.7817 8599.0498 -7878.5703 8598.4785 -7878.5703 8598.332 c-7878.5703 8598.248 -7878.5918 8598.1846 -7878.6338 8598.1846 c-7878.7178 8598.1846 -7878.9072 8598.6475 -7878.9922 8598.6475 c-7879.0342 8598.6475 -7879.0762 8598.6064 -7879.0762 8598.4785 c-7879.0762 8598.332 -7878.8862 8597.6152 y-7878.8862 8597.5518 -7878.9072 8597.4463 -7878.9502 8597.4463 c-7879.0342 8597.4463 -7879.1826 8597.8457 -7879.2666 8597.8457 c-7879.3286 8597.8457 -7879.3926 8597.7617 -7879.3926 8597.6152 c-7879.3926 8597.5303 -7879.2446 8597.1094 -7879.2446 8597.0039 c-7879.2446 8596.9404 -7879.2666 8596.876 -7879.3086 8596.876 c-7879.3506 8596.876 -7879.5835 8597.4893 -7879.7095 8597.4893 c-7879.7935 8597.4893 -7879.8994 8597.3818 -7879.8994 8597.2773 c-7879.8994 8597.1934 -7879.7729 8596.835 -7879.7729 8596.751 c-7879.7729 8596.708 -7879.7729 8596.6865 -7879.7935 8596.6865 c-7879.8774 8596.6865 -7880.0254 8597.1719 -7880.1104 8597.1719 c-7880.3418 8597.1719 -7880.3623 8596.751 -7880.3623 8596.5605 c-7880.3623 8596.4766 -7880.2998 8596.1377 -7880.2998 8596.0752 c-7880.2998 8596.0127 -7880.3198 8595.9912 -7880.3418 8595.9912 c-7880.4897 8595.9912 -7880.6782 8596.792 -7880.8271 8596.792 c-7881.0386 8596.792 -7881.0386 8596.6025 -7881.0386 8596.3711 c-7881.0166 8595.8438 L-7881.0166 8595.8223 -7881.0386 8595.8018 y-7881.0586 8595.8018 -7881.1006 8595.8223 -7881.1226 8595.8857 c-7881.1855 8596.0967 -7881.3115 8596.5186 -7881.5225 8596.5186 c-7881.6694 8596.5186 -7881.8174 8596.3496 -7881.8174 8596.2031 c-7881.8174 8595.9697 -7881.7119 8595.5898 -7881.7119 8595.3584 c-7881.7119 8595.2949 -7881.7334 8595.2744 -7881.7754 8595.2744 c-7881.8608 8595.2744 -7881.9863 8595.7158 -7882.0278 8595.8018 c-7882.0918 8595.8857 -7882.1553 8595.9072 -7882.2192 8595.9072 c-7882.5352 8595.9072 -7882.5352 8595.5898 -7882.5352 8595.4424 C-7882.4927 8595.085 lf0 D-7883.8633 8590.7197 m-7883.8633 8590.4873 -7885.8042 8590.2979 -7885.8662 8590.2979 c-7885.9722 8590.2979 -7886.0352 8590.3613 -7886.0352 8590.4658 c-7886.0352 8591.3311 -7884.2847 8593.5664 -7883.8633 8593.5664 c-7883.7998 8593.5664 -7883.7783 8593.5449 -7883.7783 8593.4824 c-7884.2002 8592.2383 -7884.2002 8591.9854 v-7884.2002 8591.6055 -7884.0942 8591.3525 -7883.9058 8590.9307 c-7883.8838 8590.8457 -7883.8633 8590.7832 -7883.8633 8590.7197 cf-7875.1338 8602.1689 m-7874.9858 8602.1689 -7874.4795 8601.6641 -7874.3325 8601.6641 c-7874.2065 8601.6641 -7874.0791 8601.748 -7874.0791 8601.8945 c-7874.0791 8601.9785 -7874.2695 8602.4209 -7874.2695 8602.5273 c-7874.2695 8602.8857 -7873.8896 8603.1826 -7873.5098 8603.1826 c-7873.1094 8603.1826 -7871.9702 8602.8652 -7871.9702 8601.6416 c-7871.9702 8600.5449 -7872.3926 8600.5449 -7874.0366 8600.5449 c-7874.3955 8600.5449 -7876.0615 8600.7354 -7876.3145 8600.7354 c-7876.4399 8600.7354 -7876.4834 8600.5664 -7876.4834 8600.4395 c-7876.4834 8600.3984 -7876.4834 8600.3564 -7876.4614 8600.335 c-7876.3984 8599.9561 -7876.1675 8599.4072 -7876.1675 8599.0273 c-7876.1675 8594.5791 -7880.2998 8590.7197 -7882.7666 8590.7197 c-7883.4209 8590.7197 -7883.6519 8591.5215 -7883.6519 8591.9424 c-7883.6519 8593.6719 -7881.6694 8594.7041 -7881.4175 8594.7041 c-7881.3545 8594.7041 -7881.3335 8594.6846 -7881.3335 8594.6416 c-7881.3335 8594.5996 -7881.3545 8594.5576 -7881.3975 8594.5146 c-7881.5225 8594.3457 -7882.0498 8593.7344 -7882.0498 8593.1025 c-7882.0498 8592.7646 -7881.7554 8592.3223 -7880.9951 8592.3223 c-7879.7305 8592.3223 -7879.1826 8593.6719 -7879.1826 8594.0303 c-7879.1826 8594.1777 -7879.2446 8594.3887 -7879.4561 8594.3887 c-7879.6035 8594.3887 -7880.0049 8593.7344 -7880.1519 8593.7344 c-7880.2158 8593.7344 -7880.4473 8593.8613 -7880.5103 8593.8613 c-7880.5942 8593.8613 -7880.6582 8593.8408 -7880.7422 8593.8408 c-7880.8057 8593.8408 -7880.8481 8593.9033 -7880.8481 8594.0088 c-7880.8481 8594.3682 -7880.3623 8594.9365 -7879.8774 8595.1904 c-7878.9722 8595.6533 -7877.6226 8596.9824 -7877.6226 8598.4375 c-7877.6226 8598.8584 -7877.6846 8599.2598 -7877.6846 8599.5967 c-7877.6846 8600.1455 -7876.7568 8601.0098 -7875.8081 8601.8945 c-7875.6401 8602.043 -7875.3862 8602.1689 -7875.1338 8602.1689 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 57)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7866.9722 8611.8896 m-7866.9722 8585.8623 L-7893 8585.8623 L-7893 8611.8896 L-7866.9722 8611.8896 Ln0 Ap0 R0.600214 0.538903 0.636072 0.347112 0.341176 0.329412 0.290196 XA0.375 w-7875.6455 8598.8789 m-7866.9736 8598.8789 lS-7879.9839 8611.8896 m-7879.9839 8603.2139 lS0.604547 0.617731 0.675929 0.546258 0.258824 0.223529 0.196078 XA1.125 w-7875.7202 8594.54 m-7866.9727 8594.54 lS-7884.3232 8611.8896 m-7884.3232 8602.5352 lS0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 XA-7875.6504 8611.8896 m-7875.6504 8609.4766 l-7872.9937 8609.2529 -7871.3096 8607.5498 v-7869.6064 8605.8232 -7869.3774 8603.2178 y-7866.9727 8603.2178 lS*u0 O0.710903 0.632837 0.513268 0.375219 0.266667 0.27451 0.309804 Xa1 w-7883.7783 8595.5273 m-7883.7783 8595.3799 -7883.9058 8595.2949 -7884.0103 8595.2949 c-7884.0527 8595.2949 -7884.2432 8595.5068 -7884.3057 8595.5068 c-7884.3271 8595.5068 -7884.4326 8595.4854 -7884.4326 8595.3584 c-7884.4326 8595.2949 -7884.3271 8595.0215 y-7884.3271 8595 -7886.4155 8592.4912 -7888.5654 8591.9854 c-7888.7344 8591.9639 -7888.8398 8592.0479 -7888.9238 8591.7314 c-7889.3042 8590.4658 -7890.1265 8589.0322 -7891.3706 8587.7041 c-7891.4966 8587.5576 -7891.9185 8587.1357 -7892.1089 8587.1357 c-7892.2134 8587.1357 -7892.2974 8587.1553 -7892.2974 8587.3242 c-7892.2974 8587.6621 -7891.1167 8588.9902 -7890.9263 8589.3271 c-7890.0845 8590.7832 -7890.0845 8591.457 -7890.0845 8591.6895 c-7890.0845 8591.8154 -7890.2734 8591.9424 -7890.6538 8591.9424 c-7890.8433 8591.9424 -7891.0752 8591.9209 -7891.2017 8591.9209 c-7891.3281 8591.9014 -7891.8975 8591.625 -7892.0449 8591.625 c-7892.2134 8591.625 -7892.3193 8591.7529 -7892.3193 8591.9209 c-7892.3193 8592.1113 -7892.2559 8592.2383 -7892.0654 8592.3857 c-7891.3921 8592.9971 -7891.3486 8593.0176 -7891.3486 8593.5029 c-7891.3486 8593.7773 -7892.0449 8594.9785 -7892.0449 8595.2744 c-7892.0449 8595.5898 -7891.5806 8595.8223 -7891.3066 8595.8223 c-7890.4424 8595.8223 -7890.21 8594.3457 -7890.21 8594.0303 c-7890.21 8593.7979 -7890.5054 8592.7031 y-7890.5054 8592.5117 -7890.4424 8592.5117 -7889.9995 8592.5117 c-7889.6626 8592.5117 -7889.5986 8595.4424 -7889.5986 8595.6533 c-7889.5986 8595.8223 -7889.6826 8595.9482 -7889.8511 8596.0557 c-7890.1265 8596.2441 -7891.4336 8597.5723 -7891.4121 8598.9854 c-7891.4121 8601.4746 -7889.6406 8602.4209 -7888.9458 8602.5068 c-7888.5874 8602.5498 -7887.7007 8602.5273 -7887.4058 8602.6973 c-7886.9424 8602.9287 -7885.8042 8604.0889 -7885.8042 8605.0801 c-7885.8042 8606.2813 -7886.5215 8606.6396 -7886.8774 8606.6396 c-7887.2378 8606.6396 -7887.5103 8606.6191 -7887.5103 8606.1338 c-7887.5103 8605.9229 -7887.3423 8605.6904 -7887.1318 8605.6279 c-7887.0474 8605.6064 -7886.2881 8605.417 -7886.2881 8605.1006 c-7886.2881 8604.9521 -7886.3721 8604.9521 -7886.5835 8604.9521 c-7887.1318 8604.9521 -7887.8066 8604.7432 -7889.0928 8603.54 c-7889.4722 8603.2031 -7890.1265 8603.1191 -7890.5679 8603.1191 c-7891.0537 8603.1191 -7892.2974 8603.582 -7892.2974 8605.0801 c-7892.2974 8606.9121 -7891.4751 8607.6104 -7890.8433 8607.6104 c-7890.4209 8607.6104 -7889.8936 8607.293 -7889.8936 8607.0186 c-7889.8936 8606.6826 -7889.9575 8606.2607 -7890.5479 8606.2178 c-7891.0537 8606.1758 -7891.3066 8605.9434 -7891.3066 8605.6064 c-7891.3066 8605.3945 -7891.1592 8605.1846 -7890.8218 8605.1846 c-7890.3154 8605.1846 -7889.7041 8605.7549 -7889.0713 8606.4922 c-7888.6714 8606.9775 -7887.7007 8607.5049 -7886.9209 8607.5049 c-7886.1191 8607.5049 -7885.0654 8606.5986 -7885.0654 8605.2266 c-7885.0654 8603.9609 -7886.4995 8602.6533 -7887.2378 8602.1279 c-7887.9546 8601.6006 -7888.3335 8601.2207 -7888.46 8601.0098 c-7888.5654 8600.8623 -7888.9033 8599.9121 -7889.1143 8599.9121 c-7889.2607 8599.9121 -7889.3672 8600.0811 -7889.3672 8600.293 c-7889.3672 8600.6094 -7889.1143 8601.2432 -7888.7759 8601.5791 c-7888.6929 8601.6846 -7888.6494 8601.748 -7888.6494 8601.8105 c-7888.6494 8601.959 -7888.8398 8601.9785 -7888.9873 8601.9785 c-7889.5767 8601.9785 -7890.7793 8601.0098 -7890.7793 8599.1758 c-7890.7793 8597.5938 -7889.7881 8596.751 -7889.6406 8596.751 c-7889.5361 8596.751 -7889.4297 8596.8555 -7889.3672 8597.0674 c-7887.6592 8603.2236 -7882.7822 8604.4473 -7880.3774 8604.4473 c-7880.2729 8604.4473 -7880.1895 8604.5098 -7880.1895 8604.6592 c-7880.1895 8604.7842 -7880.1895 8605.8818 -7880.3359 8605.8818 c-7880.3774 8605.8818 -7880.4414 8605.8594 -7880.5264 8605.7969 c-7881.0942 8605.333 -7881.3755 8604.9746 -7882.3022 8604.9746 c-7882.7666 8604.9746 -7883.5679 8605.501 -7883.5679 8606.1133 c-7883.5679 8606.8926 -7882.8936 8607.6104 -7882.4082 8607.6104 c-7882.0498 8607.6104 -7881.9023 8607.5254 -7881.9023 8607.3994 c-7881.9023 8607.2705 -7882.3662 8606.8301 -7882.3662 8606.6826 c-7882.3662 8606.4287 -7882.3242 8606.2813 -7881.8809 8606.2813 c-7881.4814 8606.2813 -7880.7842 8606.4512 -7880.3418 8606.7041 c-7879.8774 8606.9775 -7878.7393 8607.6104 -7877.7065 8607.6104 c-7876.9473 8607.6104 -7875.9561 8607.167 -7875.4702 8606.3662 c-7875.4287 8606.3018 -7875.3862 8606.2813 -7875.3447 8606.2813 c-7875.2393 8606.2813 -7875.1543 8606.3662 -7875.1338 8606.5146 c-7875.0913 8606.9121 -7874.7534 8607.6104 -7873.9312 8607.6104 c-7873.3408 8607.6104 -7872.8135 8607.1025 -7872.8135 8606.6602 c-7872.8135 8606.4922 -7872.9194 8606.4287 -7873.0239 8606.4287 c-7873.1094 8606.4287 -7873.4878 8606.6826 -7873.5942 8606.6826 c-7873.7407 8606.6826 -7874.6479 8606.0703 -7874.7334 8605.9229 c-7875.5127 8604.6367 -7875.5977 8604.4893 -7876.2295 8604.2354 c-7876.3984 8604.1514 -7876.3984 8604.0674 -7876.3984 8603.2031 c-7876.3984 8603.0762 -7876.3984 8602.7793 -7876.5454 8602.6113 c-7876.8198 8602.3389 -7878.9287 8600.2705 -7879.1392 8600.2705 c-7879.2241 8600.2705 -7879.4985 8600.5449 -7879.5835 8600.5449 c-7879.6035 8600.5449 -7879.6255 8600.5449 -7879.6255 8600.5039 C-7879.6035 8600.3564 l-7879.6035 8600.1885 -7879.6455 8600.1025 -7879.8564 8600.1025 c-7879.9199 8600.1025 -7880.1943 8600.2295 -7880.2568 8600.2295 c-7880.3198 8600.2295 -7880.3623 8599.7871 -7880.4473 8599.7871 c-7880.4678 8599.7871 -7880.8057 8600.0186 -7880.8896 8600.0186 c-7881.0166 8600.0186 -7881.1006 8599.9346 -7881.1006 8599.8281 c-7881.1006 8599.7666 -7881.1006 8599.2813 -7881.2065 8599.2813 c-7881.2915 8599.2813 -7881.5225 8599.5752 -7881.5654 8599.5752 c-7881.5854 8599.5752 -7881.5854 8599.5557 -7881.5854 8599.4912 C-7881.5439 8599.0703 l-7881.5439 8599.0059 -7881.5854 8598.9854 -7881.6494 8598.9854 c-7881.7119 8598.9854 -7881.9658 8599.3018 -7882.0498 8599.3018 c-7882.0918 8599.3018 -7882.1138 8599.2598 -7882.1138 8599.1758 c-7882.1138 8599.1338 -7881.9233 8598.417 -7881.9233 8598.2686 c-7881.9233 8598.1846 -7881.9658 8598.1416 -7882.0078 8598.1416 c-7882.0918 8598.1416 -7882.4297 8598.501 -7882.4722 8598.501 c-7882.4927 8598.501 -7882.4927 8598.501 -7882.4927 8598.4785 c-7882.4927 8598.3945 -7882.3882 8598.0361 -7882.3882 8598.0166 c-7882.3882 8597.9951 -7882.4082 8597.9736 -7882.4297 8597.9736 c-7882.4722 8597.9736 -7882.6826 8598.1846 -7882.7446 8598.1846 c-7882.7666 8598.1846 -7882.7666 8598.1846 -7882.7666 8598.1416 c-7882.7666 8597.9736 -7882.5137 8597.2354 -7882.5137 8597.1719 c-7882.5137 8597.1504 -7882.5352 8597.1289 -7882.5562 8597.1289 c-7882.6826 8597.1289 -7883.1055 8597.7002 -7883.1465 8597.7002 c-7883.1675 8597.7002 -7883.1675 8597.6777 -7883.1675 8597.6152 c-7883.1675 8597.4248 -7882.8936 8596.5186 y-7882.8936 8596.4971 -7882.9146 8596.4766 -7882.9351 8596.4766 c-7883.0615 8596.4766 -7883.4414 8597.0234 -7883.5049 8597.0234 c-7883.5264 8597.0234 -7883.5264 8597.0234 -7883.5264 8596.9824 c-7883.2729 8596.0752 -7883.2729 8595.9912 v-7883.2729 8595.8857 -7883.3154 8595.8438 -7883.3994 8595.8438 c-7883.4634 8595.8438 -7883.6943 8596.1807 -7883.7783 8596.1807 c-7883.8218 8596.1807 -7883.8418 8596.1377 -7883.8418 8596.0752 c-7883.7783 8595.5273 Lf1 D-7888.0386 8594.79 m-7888.1016 8594.8311 -7888.1865 8594.8525 -7888.2495 8594.8525 c-7888.5874 8594.8525 -7888.6714 8592.8496 -7888.6714 8592.6592 c-7888.6714 8592.5967 -7888.6289 8592.5557 -7888.5654 8592.5557 c-7887.4272 8592.5557 -7885.5498 8594.5166 -7885.5498 8594.9365 c-7885.5498 8594.9785 -7885.5498 8595 -7885.5928 8595 c-7885.6138 8595 -7885.6553 8594.9785 -7885.6982 8594.958 c-7886.0986 8594.6846 -7886.5215 8594.5791 -7887.1104 8594.5791 c-7887.4902 8594.5791 -7887.7007 8594.6416 -7888.0386 8594.79 cf-7886.3306 8598.7529 m-7885.8882 8599.5752 -7884.8115 8599.5752 -7884.7271 8599.5752 c-7884.5801 8599.5752 -7884.3906 8599.5557 -7884.3906 8599.3857 c-7884.3906 8599.1953 -7885.4238 8598.9434 -7885.4238 8598.7529 c-7885.2129 8598.417 -7885.2129 8598.332 v-7885.2129 8597.9326 -7885.2129 8597.8896 -7885.0225 8597.8896 c-7884.7915 8597.8896 -7883.9897 8598.1846 -7883.7378 8598.9014 c-7883.5474 8599.4287 -7882.5767 8601.1563 -7880.4258 8601.1563 c-7879.5615 8601.1563 -7879.2446 8601.0098 -7879.0977 8601.0098 c-7878.7817 8601.0098 -7876.8418 8603.0557 -7876.8198 8603.2236 c-7876.7998 8603.3281 -7876.7998 8603.4561 -7876.7998 8603.5615 c-7876.7998 8603.7725 -7876.7998 8604.1729 -7877.1782 8604.4258 c-7877.3896 8604.5527 -7877.4951 8604.8057 -7877.4951 8605.0576 c-7877.4951 8605.1641 -7877.4951 8605.5225 -7877.2207 8605.5225 c-7876.9473 8605.5225 -7876.9058 8605.375 -7876.9058 8605.0801 c-7876.9058 8604.8906 -7876.7358 8604.7842 -7876.5889 8604.7842 c-7876.4399 8604.7842 -7875.8506 8605.0801 -7875.8506 8605.501 c-7875.8506 8605.7334 -7876.1455 8606.8086 -7877.4321 8606.8086 c-7878.4014 8606.8086 -7878.4014 8606.6826 -7878.4014 8605.2891 c-7878.4014 8604.0254 -7878.3594 8603.624 -7878.2119 8602.4863 c-7878.1904 8602.4863 -7878.1904 8602.4648 y-7878.1904 8602.3174 -7878.3174 8602.2529 -7878.4233 8602.2529 c-7878.4438 8602.2529 -7878.4648 8602.2744 -7878.4863 8602.2744 c-7878.6118 8602.2959 -7878.9072 8602.6113 -7879.8145 8602.5898 c-7881.7119 8602.5898 -7885.9087 8601.0313 -7887.2793 8598.543 c-7887.8906 8597.4678 -7888.2705 8596.0967 -7888.2705 8595.8438 c-7888.2705 8595.2949 -7887.2578 8595.127 -7887.0049 8595.127 c-7885.6553 8595.127 -7884.2847 8596.792 -7884.2847 8597.2354 c-7884.2847 8597.2773 -7884.3271 8597.3193 -7884.3486 8597.3193 c-7884.3906 8597.3193 -7884.4326 8597.2988 -7884.4961 8597.2568 c-7884.6431 8597.1094 -7885.2334 8596.4551 -7885.8662 8596.4551 c-7886.5625 8596.4551 -7886.5835 8596.9189 -7886.5835 8597.3408 c-7886.5835 8597.7842 -7886.5415 8598.3525 -7886.3306 8598.7529 cf0 D-7882.5352 8595.4424 m-7882.5352 8595.5898 -7882.5352 8595.9072 -7882.2192 8595.9072 c-7882.1553 8595.9072 -7882.0918 8595.8857 -7882.0278 8595.8018 c-7881.9863 8595.7158 -7881.8608 8595.2744 -7881.7754 8595.2744 c-7881.7334 8595.2744 -7881.7119 8595.2949 -7881.7119 8595.3584 c-7881.7119 8595.5898 -7881.8174 8595.9697 -7881.8174 8596.2031 c-7881.8174 8596.3496 -7881.6694 8596.5186 -7881.5225 8596.5186 c-7881.3115 8596.5186 -7881.1855 8596.0967 -7881.1226 8595.8857 c-7881.1006 8595.8223 -7881.0586 8595.8018 -7881.0386 8595.8018 c-7881.0166 8595.8223 -7881.0166 8595.8438 V-7881.0386 8596.3711 l-7881.0386 8596.6025 -7881.0386 8596.792 -7880.8271 8596.792 c-7880.6782 8596.792 -7880.4897 8595.9912 -7880.3418 8595.9912 c-7880.3198 8595.9912 -7880.2998 8596.0127 -7880.2998 8596.0752 c-7880.2998 8596.1377 -7880.3623 8596.4766 -7880.3623 8596.5605 c-7880.3623 8596.751 -7880.3418 8597.1719 -7880.1104 8597.1719 c-7880.0254 8597.1719 -7879.8774 8596.6865 -7879.7935 8596.6865 c-7879.7729 8596.6865 -7879.7729 8596.708 -7879.7729 8596.751 c-7879.7729 8596.835 -7879.8994 8597.1934 -7879.8994 8597.2773 c-7879.8994 8597.3818 -7879.7935 8597.4893 -7879.7095 8597.4893 c-7879.5835 8597.4893 -7879.3506 8596.876 -7879.3086 8596.876 c-7879.2666 8596.876 -7879.2446 8596.9404 -7879.2446 8597.0039 c-7879.2446 8597.1094 -7879.3926 8597.5303 -7879.3926 8597.6152 c-7879.3926 8597.7617 -7879.3286 8597.8457 -7879.2666 8597.8457 c-7879.1826 8597.8457 -7879.0342 8597.4463 -7878.9502 8597.4463 c-7878.9072 8597.4463 -7878.8862 8597.5518 -7878.8862 8597.6152 c-7879.0762 8598.332 -7879.0762 8598.4785 v-7879.0762 8598.6064 -7879.0342 8598.6475 -7878.9922 8598.6475 c-7878.9072 8598.6475 -7878.7178 8598.1846 -7878.6338 8598.1846 c-7878.5918 8598.1846 -7878.5703 8598.248 -7878.5703 8598.332 c-7878.5703 8598.4785 -7878.7817 8599.0498 -7878.7817 8599.1533 c-7878.7817 8599.3018 -7878.7817 8599.4912 -7878.6758 8599.4912 c-7878.6338 8599.4912 -7878.4863 8599.2813 -7878.4438 8599.2813 c-7878.4014 8599.2813 -7878.3809 8599.3232 -7878.3809 8599.3857 c-7878.3809 8599.4492 -7878.5073 8599.7441 -7878.5073 8599.8076 c-7878.5073 8599.9346 -7875.9561 8602.6533 -7875.4287 8602.6533 c-7874.9233 8602.6533 -7874.8594 8602.6533 -7874.7744 8602.8447 c-7874.6904 8603.0762 -7874.5854 8603.3086 -7874.1426 8603.582 c-7873.0039 8604.2139 -7872.8774 8604.2998 -7872.8135 8604.6162 c-7872.7295 8605.1006 -7872.7085 8605.1426 -7872.3926 8605.3535 c-7872.2446 8605.459 -7872.2026 8605.5645 -7872.2026 8605.7119 c-7872.2026 8606.0703 -7872.2026 8606.1133 -7872.0127 8606.1133 c-7871.7598 8606.1133 -7871.4214 8605.4385 -7871.4214 8605.0801 c-7871.4214 8604.1309 -7871.8018 8604.0254 -7872.4126 8603.8555 c-7872.5615 8603.8145 -7872.7085 8603.708 -7872.7085 8603.624 c-7872.7085 8603.582 -7872.6875 8603.5615 -7872.6455 8603.54 c-7871.7598 8603.0352 -7871.4214 8602.3389 -7871.4214 8601.7686 c-7871.4214 8600.9678 -7872.7085 8597.2568 -7872.7085 8596.9189 c-7872.7085 8596.4336 -7872.5615 8596.3916 -7872.3711 8596.3916 c-7872.2241 8596.3916 -7871.7178 8596.9189 -7871.5903 8596.9189 c-7871.5073 8596.9189 -7871.4214 8596.8555 -7871.4214 8596.6865 c-7871.4214 8596.4551 -7871.8657 8595.4209 -7872.8984 8595.4209 c-7873.4878 8595.4209 -7873.8682 8595.9482 -7873.8682 8596.4111 c-7873.8682 8597.3623 -7873.5518 8597.5361 -7873.1934 8598.1064 c-7873.1294 8598.2334 -7873.0879 8598.3594 -7873.0879 8598.4658 c-7873.0879 8598.7393 -7873.7202 8598.6602 -7874.0786 8598.6602 c-7874.2256 8598.6602 -7874.3955 8598.6338 -7874.3955 8598.5273 c-7874.3955 8593.9111 -7877.6426 8590.3613 -7881.5225 8589.623 c-7881.8394 8589.5586 -7881.9863 8589.4336 -7881.9863 8589.3066 c-7881.9863 8589.2646 -7881.1006 8588.1475 -7879.6255 8588.1475 c-7877.8535 8588.1475 -7876.7153 8589.623 -7876.7153 8590.3818 c-7876.7153 8590.4658 -7876.7568 8590.5303 -7876.8198 8590.5303 c-7876.9058 8590.5303 -7877.8535 8589.5811 -7878.0854 8589.5811 c-7878.2119 8589.5811 -7878.3174 8589.6865 -7878.3174 8589.792 c-7878.3174 8589.9189 -7878.2334 8590.0439 -7878.0439 8590.1914 c-7877.9814 8590.2139 -7876.5454 8591.9014 -7876.2515 8592.2383 c-7875.6401 8592.9551 -7874.8594 8593.7344 -7873.6362 8593.7344 c-7872.4561 8593.7344 -7871.4214 8592.5342 -7871.4214 8591.7744 c-7871.4214 8590.9951 -7871.8857 8590.2979 -7872.3711 8589.8975 c-7873.8896 8588.6318 -7873.8896 8588.2529 -7873.8896 8588.0205 c-7873.8896 8587.7041 -7873.6992 8587.5791 -7873.4878 8587.5791 c-7873.1514 8587.5791 -7872.9824 8587.7256 -7872.9824 8588.3994 c-7872.9824 8588.7373 -7872.6455 8589.0752 -7872.2026 8589.0752 c-7871.7598 8589.0752 -7871.4434 8588.6953 -7871.4434 8588.084 c-7871.4434 8587.4736 -7872.2871 8586.7344 -7873.4878 8586.7344 c-7875.1338 8586.7344 -7875.6182 8587.8936 -7875.6182 8588.3789 c-7875.6182 8588.7158 -7875.5127 8589.3066 -7875.1958 8589.665 c-7874.8594 8590.0664 -7874.4595 8590.7617 -7874.1846 8591.4785 c-7873.9521 8592.1328 -7873.4258 8592.4912 -7873.0879 8592.4912 c-7873.0239 8592.4912 -7873.0039 8592.4697 -7873.0039 8592.4277 c-7873.0039 8592.3223 -7873.2144 8591.9424 -7873.2144 8591.8584 c-7873.2144 8591.4785 -7873.1094 8591.2686 -7872.8984 8591.2686 c-7872.3711 8591.2686 -7872.2656 8591.9209 -7872.2656 8592.1533 c-7872.2656 8592.6396 -7872.6245 8593.2285 -7873.6782 8593.2285 c-7875.0063 8593.2285 -7876.1245 8591.4785 -7876.1245 8591.416 c-7876.1245 8591.3936 -7876.0825 8590.8457 -7876.0825 8590.7402 c-7876.0825 8588.8418 -7877.79 8587.5791 -7879.6255 8587.5791 c-7881.1855 8587.5791 -7882.3447 8588.8018 -7882.5352 8589.0957 c-7882.6401 8589.2646 -7882.7666 8589.3486 -7882.9146 8589.3486 c-7883.2729 8589.3486 -7886.1191 8589.2871 -7886.1191 8588.8643 c-7886.1191 8588.8223 -7885.9937 8588.3584 -7885.8242 8588.3584 c-7885.7607 8588.3584 -7885.6982 8588.3994 -7885.6353 8588.4639 c-7885.4438 8588.6953 -7885.0225 8588.8223 -7884.6431 8588.8223 c-7884.0942 8588.8223 -7883.1895 8588.2314 -7883.1895 8587.4941 c-7883.1895 8587.1982 -7883.5679 8586.7139 -7883.8838 8586.7139 c-7884.1377 8586.7139 -7885.1914 8587.4307 -7885.4238 8587.4307 c-7885.7402 8587.4307 -7885.8662 8587.2822 -7886.1606 8586.9453 c-7886.3306 8586.7559 -7886.4575 8586.7344 -7886.6465 8586.7344 c-7886.8154 8586.7344 -7886.9634 8586.8398 -7886.9634 8586.9873 c-7886.9634 8587.1553 -7886.6465 8587.4736 -7886.6265 8587.7471 c-7886.6265 8587.8936 -7886.6055 8588.125 -7886.6055 8588.3154 c-7886.6055 8588.5693 -7886.6265 8588.9277 -7886.8994 8588.9277 c-7887.7217 8588.9277 -7889.7681 8587.6416 -7890.6538 8587.0498 c-7891.1592 8586.7139 -7891.2432 8586.7139 -7891.3066 8586.7139 c-7891.4336 8586.7139 -7891.5176 8586.7979 -7891.5176 8586.9453 c-7891.5176 8587.0713 -7889.0713 8589.2236 -7886.8994 8589.96 c-7886.5835 8590.0664 -7886.6055 8590.2139 -7886.5625 8590.3818 c-7886.1406 8592.1328 -7884.5166 8594.3057 -7883.9263 8594.3057 c-7883.7783 8594.3057 -7883.7158 8594.3057 -7883.7158 8594.4111 c-7883.7158 8594.6201 -7883.6104 8594.8525 -7883.4634 8594.8525 c-7883.4209 8594.8525 -7883.2524 8594.6201 -7883.21 8594.6201 c-7883.1255 8594.6201 -7883.0615 8595.085 -7883.0415 8595.168 c-7882.9995 8595.2744 -7882.9146 8595.3584 -7882.8506 8595.3584 c-7882.7666 8595.3584 -7882.5986 8595.0215 -7882.5352 8595.0215 c-7882.5137 8595.0215 -7882.4927 8595.041 -7882.4927 8595.085 c-7882.5352 8595.4424 Lf1 D-7883.9058 8590.9307 m-7884.0942 8591.3525 -7884.2002 8591.6055 -7884.2002 8591.9854 c-7884.2002 8592.2383 -7883.7783 8593.4824 y-7883.7783 8593.5449 -7883.7998 8593.5664 -7883.8633 8593.5664 c-7884.2847 8593.5664 -7886.0352 8591.3311 -7886.0352 8590.4658 c-7886.0352 8590.3613 -7885.9722 8590.2979 -7885.8662 8590.2979 c-7885.8042 8590.2979 -7883.8633 8590.4873 -7883.8633 8590.7197 c-7883.8633 8590.7832 -7883.8838 8590.8457 -7883.9058 8590.9307 cf-7875.8081 8601.8945 m-7876.7568 8601.0098 -7877.6846 8600.1455 -7877.6846 8599.5967 c-7877.6846 8599.2598 -7877.6226 8598.8584 -7877.6226 8598.4375 c-7877.6226 8596.9824 -7878.9722 8595.6533 -7879.8774 8595.1904 c-7880.3623 8594.9365 -7880.8481 8594.3682 -7880.8481 8594.0088 c-7880.8481 8593.9033 -7880.8057 8593.8408 -7880.7422 8593.8408 c-7880.6582 8593.8408 -7880.5942 8593.8613 -7880.5103 8593.8613 c-7880.4473 8593.8613 -7880.2158 8593.7344 -7880.1519 8593.7344 c-7880.0049 8593.7344 -7879.6035 8594.3896 -7879.4561 8594.3896 c-7879.2446 8594.3896 -7879.1826 8594.1777 -7879.1826 8594.0303 c-7879.1826 8593.6719 -7879.7305 8592.3223 -7880.9951 8592.3223 c-7881.7554 8592.3223 -7882.0498 8592.7646 -7882.0498 8593.1025 c-7882.0498 8593.7344 -7881.5225 8594.3457 -7881.3975 8594.5166 c-7881.3545 8594.5576 -7881.3335 8594.5996 -7881.3335 8594.6416 c-7881.3335 8594.6846 -7881.3545 8594.7041 -7881.4175 8594.7041 c-7881.6694 8594.7041 -7883.6519 8593.6719 -7883.6519 8591.9424 c-7883.6519 8591.5215 -7883.4209 8590.7197 -7882.7666 8590.7197 c-7880.2998 8590.7197 -7876.1675 8594.5791 -7876.1675 8599.0273 c-7876.1675 8599.4072 -7876.3984 8599.9561 -7876.4614 8600.335 c-7876.4834 8600.3564 -7876.4834 8600.3984 -7876.4834 8600.4395 c-7876.4834 8600.5664 -7876.4399 8600.7354 -7876.3145 8600.7354 c-7876.0615 8600.7354 -7874.3955 8600.5449 -7874.0366 8600.5449 c-7872.3926 8600.5449 -7871.9702 8600.5449 -7871.9702 8601.6416 c-7871.9702 8602.8652 -7873.1094 8603.1826 -7873.5098 8603.1826 c-7873.8896 8603.1826 -7874.2695 8602.8857 -7874.2695 8602.5273 c-7874.2695 8602.4209 -7874.0791 8601.9785 -7874.0791 8601.8945 c-7874.0791 8601.748 -7874.2065 8601.6641 -7874.3325 8601.6641 c-7874.4795 8601.6641 -7874.9858 8602.1689 -7875.1338 8602.1689 c-7875.3862 8602.1689 -7875.6401 8602.043 -7875.8081 8601.8945 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 7)0 Au1 Ap0 D0 J 0 j 1 w 4 M []0 d0 XR-7875 8611.8896 m-7893 8611.8896 L-7893 8593.8896 L-7875 8593.8896 L-7875 8611.8896 Lnu0 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-7875 8602.8896 m-7882.8379 8598.3643 L-7882.8379 8601.4521 L-7893 8601.4521 L-7893 8604.3271 L-7882.8379 8604.3271 L-7882.8379 8607.416 L-7875 8602.8896 Lf0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa-7879.2939 8601.2754 m-7882.0879 8599.6641 L-7882.0879 8602.1904 L-7893 8602.1904 L-7893 8603.5898 L-7882.0879 8603.5898 L-7882.0879 8606.1162 L-7879.2939 8604.5029 L-7876.5 8602.8896 L-7879.2939 8601.2754 Lf0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa-7881.1675 8601.9814 m-7881.5586 8601.9814 -7881.8896 8602.2305 -7882.0176 8602.5762 C-7893 8602.5762 L-7893 8603.2021 L-7882.0176 8603.2021 L-7881.8896 8603.5498 -7881.5586 8603.7979 -7881.1675 8603.7979 c-7880.6655 8603.7979 -7880.2588 8603.3916 -7880.2588 8602.8896 c-7880.2588 8602.3887 -7880.6655 8601.9814 -7881.1675 8601.9814 cfUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Charcoal/ Adobe Art) -(OnPath Brush Tool/ Tapered Stroke/ Adobe ArtOnPath Brush Tool/) -( Floral Spoke/ Adobe PatternOnPath Brush Tool/ Red Arrow Brush) -(/ Adobe PatternOnPath Brush Tool/ Gothic/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Floral Spoke)(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Tapered Stroke)(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Gothic)(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Red Arrow Brush)(1 / Unnamed Brush Pat 3/ Unnamed Brush Pat 5/ Unnamed Brush Pa) -(t 5/ Unnamed Brush Pat 7/ Unnamed Brush Pat 2/ 5 0.00392157 0.) -(00392157 0.00784314 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0.000031 0.000031 0.000031 0.000031 1 1 1 Xa(White)Pc0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa(Black)Pc0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa(CMYK Red)Pc0.037415 0.000031 0.938323 0.000031 1 0.945098 0 Xa(CMYK Yellow)Pc0.830198 0.070466 0.955505 0.00293 0 0.647059 0.317647 Xa(CMYK Green)Pc0.696681 0.145022 0.000031 0.000031 0 0.678431 0.933333 Xa(CMYK Cyan)Pc0.9935 0.966247 0.040497 0.005554 0.180392 0.192157 0.568627 Xa(CMYK Blue)Pc0.01062 0.992554 0.011963 0.000031 0.921569 0 0.545098 Xa(CMYK Magenta)Pc0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa(C=15 M=100 Y=90 K=10)Pc0.000671 0.901213 0.849546 0.000031 0.933333 0.25098 0.211765 Xa(C=0 M=90 Y=85 K=0)Pc0.00116 0.798733 0.949126 0.000244 0.941176 0.352941 0.156863 Xa(C=0 M=80 Y=95 K=0)Pc0.003662 0.505333 0.989288 0.000031 0.964706 0.572549 0.117647 Xa(C=0 M=50 Y=100 K=0)Pc0.003021 0.35346 0.847349 0.000031 0.980392 0.686275 0.25098 Xa(C=0 M=35 Y=85 K=0)Pc0.054444 0.003235 0.905974 0.000031 0.976471 0.92549 0.192157 Xa(C=5 M=0 Y=90 K=0)Pc0.20148 0.003815 0.989227 0.000031 0.839216 0.870588 0.137255 Xa(C=20 M=0 Y=100 K=0)Pc0.505791 0.004547 0.994018 0.000031 0.545098 0.772549 0.247059 Xa(C=50 M=0 Y=100 K=0)Pc0.754574 0.006806 0.99881 0.000214 0.215686 0.701961 0.290196 Xa(C=75 M=0 Y=100 K=0)Pc0.86276 0.170748 1 0.035309 0 0.576471 0.270588 Xa(C=85 M=10 Y=100 K=10)Pc0.902037 0.334844 0.976532 0.260471 0 0.407843 0.219608 Xa(C=90 M=30 Y=95 K=30)Pc0.757656 0.005707 0.748348 0.000031 0.160784 0.705882 0.45098 Xa(C=75 M=0 Y=75 K=0)Pc0.790921 0.110048 0.453498 0.001251 0 0.65098 0.611765 Xa(C=80 M=10 Y=45 K=0)Pc0.705592 0.159396 0.000092 0.000031 0.14902 0.662745 0.878431 Xa(C=70 M=15 Y=0 K=0)Pc0.851041 0.499489 0.004303 0.000031 0.105882 0.458824 0.733333 Xa(C=85 M=50 Y=0 K=0)Pc0.99588 0.93521 0.066804 0.005341 0.168627 0.219608 0.560784 Xa(C=100 M=95 Y=5 K=0)Pc1 1 0.305394 0.220737 0.14902 0.133333 0.380392 Xa(C=100 M=100 Y=25 K=25)Pc0.751614 0.986633 0.016571 0.002991 0.396078 0.176471 0.564706 Xa(C=75 M=100 Y=0 K=0)Pc0.513085 0.995178 0.021149 0.001465 0.564706 0.152941 0.556863 Xa(C=50 M=100 Y=0 K=0)Pc0.360327 1 0.353826 0.089052 0.619608 0.121569 0.388235 Xa(C=35 M=100 Y=35 K=10)Pc0.097017 0.997467 0.483467 0.004913 0.85098 0.109804 0.360784 Xa(C=10 M=100 Y=50 K=0)Pc0.005951 0.949981 0.201511 0.000031 0.92549 0.160784 0.482353 Xa(C=0 M=95 Y=20 K=0)Pc0.25568 0.249699 0.402838 0.000031 0.756863 0.705882 0.603922 Xa(C=25 M=25 Y=40 K=0)Pc0.395941 0.446571 0.488045 0.063233 0.603922 0.517647 0.47451 Xa(C=40 M=45 Y=50 K=5)Pc0.518273 0.513481 0.611536 0.231357 0.443137 0.396078 0.345098 Xa(C=50 M=50 Y=60 K=25)Pc0.543633 0.603143 0.645685 0.397101 0.352941 0.290196 0.258824 Xa(C=55 M=60 Y=65 K=40)Pc0.236454 0.395239 0.642084 0.015473 0.764706 0.6 0.419608 Xa(C=25 M=40 Y=65 K=0)Pc0.307591 0.494209 0.757412 0.096529 0.658824 0.486275 0.309804 Xa(C=30 M=50 Y=75 K=10)Pc0.360388 0.604211 0.80734 0.241825 0.541176 0.364706 0.231373 Xa(C=35 M=60 Y=80 K=25)Pc0.391821 0.642573 0.894743 0.355108 0.458824 0.298039 0.156863 Xa(C=40 M=65 Y=90 K=35)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(C=40 M=70 Y=100 K=50)Pc0.51931 0.703029 0.790982 0.698695 0.231373 0.137255 0.078431 Xa(C=50 M=70 Y=80 K=70)PcBb2 (Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient)PcBb2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade to Black)PcBb0 0 0 0 Bh2 (Radial Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient)PcBb0 0 0 0 Bh2 (Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Soft Black Vignette)PcBb2 (Desert Sunset) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Desert Sunset)PcBb0 0 0 0 Bh2 (Copper Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Copper Radial)Pc(Fish Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Fish Pattern)Pc0.491859 0.414374 0.505302 0.088533 0.517647 0.509804 0.466667 Xa(R=132 G=130 B=119 1)Pc0.000031 0.4766 0.8663 0.000031 0.968627 0.596078 0.227451 Xa(R=247 G=152 B=58 1)Pc0 0 0 0.77 (PANTONE 425 U) 0 x(PANTONE 425 U)Pc0 0 0 0.61 (PANTONE 424 U) 0 x(PANTONE 424 U)Pc0 0.66 1 0.07 (PANTONE 159 U) 0 x(PANTONE 159 U)Pc0 0.18 0.21 0.56 (PANTONE 410 U) 0 x(PANTONE 410 U)Pc0 0.08 0.22 0.56 (PANTONE 404 U) 0 x(PANTONE 404 U)Pc0 0.61 0.97 0 (PANTONE 158 U) 0 x(PANTONE 158 U)Pc0 0.07 0.17 0.43 (PANTONE 403 U) 0 x(PANTONE 403 U)Pc0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa(C=0 M=0 Y=0 K=100)Pc0.679255 0.611627 0.588037 0.462501 0.25098 0.25098 0.254902 Xa(C=0 M=0 Y=0 K=90)Pc0.638788 0.555108 0.526177 0.275181 0.345098 0.34902 0.356863 Xa(C=0 M=0 Y=0 K=80)Pc0.581781 0.492103 0.470741 0.1514 0.427451 0.431373 0.439216 Xa(C=0 M=0 Y=0 K=70)Pc0.521477 0.431769 0.410437 0.065675 0.501961 0.505882 0.517647 Xa(C=0 M=0 Y=0 K=60)Pc0.454841 0.363958 0.351537 0.014527 0.572549 0.580392 0.592157 Xa(C=0 M=0 Y=0 K=50)Pc0.367559 0.287694 0.276036 0.000031 0.65098 0.658824 0.670588 Xa(C=0 M=0 Y=0 K=40)Pc0.268681 0.203189 0.199283 0.000031 0.733333 0.741176 0.74902 Xa(C=0 M=0 Y=0 K=30)Pc0.174166 0.123781 0.126894 0.000031 0.815686 0.823529 0.827451 Xa(C=0 M=0 Y=0 K=20)Pc0.08426 0.057374 0.057435 0.000031 0.901961 0.905882 0.909804 Xa(C=0 M=0 Y=0 K=10)Pc0.039734 0.02884 0.023896 0.000031 0.945098 0.945098 0.94902 Xa(C=0 M=0 Y=0 K=5)Pc0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa(C=0 M=100 Y=100 K=0)Pc0.005646 0.744991 0.988983 0.000427 0.945098 0.396078 0.133333 Xa(C=0 M=75 Y=100 K=0)Pc0.016846 0.093446 0.972717 0.000031 1 0.866667 0.082353 Xa(C=0 M=10 Y=95 K=0)Pc0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 Xa(C=85 M=10 Y=100 K=0)Pc0.994598 0.874296 0.035157 0.001648 0.133333 0.25098 0.6 Xa(C=100 M=90 Y=0 K=0)Pc0.594995 0.897002 0.007355 0.000244 0.498039 0.247059 0.592157 Xa(C=60 M=90 Y=0 K=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au*u0 O0 0.61 0.97 0 (PANTONE 158 U) 0 x0 J 0 j 1 w 4 M []0 d0 XR258.5142 371.5918 m250.4966 358.2197 L250.4966 349.9648 L246.3931 349.9648 L246.3931 358.2197 L238.5977 371.5918 L243.3511 371.5918 L246.6147 365.8887 L246.7944 365.5713 247.1006 364.9854 247.5337 364.1299 c247.9932 363.2578 L248.437 362.3867 L248.5479 362.3867 L249.0073 363.2578 L249.4668 364.1299 L249.8574 364.9111 250.1694 365.4971 250.4019 365.8887 c253.6973 371.5918 l258.5142 371.5918 Lf*U*u269.6284 371.7822 m273.5581 371.7822 276.0874 371.1299 277.2178 369.8252 c278.3481 368.5205 278.9131 365.6035 278.9131 361.0713 c278.9131 356.1172 278.3452 352.9961 277.21 351.708 c276.0742 350.4189 273.3257 349.7744 268.9634 349.7744 c265.0337 349.7744 262.4932 350.4111 261.3423 351.6836 c260.1904 352.957 259.6152 355.7588 259.6152 360.0889 c259.6152 365.2441 260.1802 368.4814 261.3105 369.8018 c262.4404 371.1221 265.2134 371.7822 269.6284 371.7822 cf1 D269.3115 368.2646 m266.5547 368.2646 264.9438 367.9111 264.479 367.2031 c264.0142 366.4951 263.7822 364.0449 263.7822 359.8516 c263.7822 356.7461 264.0537 354.877 264.5981 354.2432 c265.1421 353.6094 266.7451 353.292 269.4067 353.292 c271.9521 353.292 273.4785 353.6484 273.9858 354.3613 c274.4927 355.0742 274.7461 357.2373 274.7461 360.8496 c274.7461 364.4727 274.5059 366.6143 274.0254 367.2744 c273.5444 367.9346 271.9736 368.2646 269.3115 368.2646 cf*U*u0 D295.9214 371.5918 m300.0254 371.5918 L300.0254 357.2061 L300.0254 354.1953 299.4473 352.2041 298.29 351.2324 c297.1333 350.2607 294.77 349.7744 291.1997 349.7744 c287.4287 349.7744 284.957 350.2344 283.7847 351.1533 c282.6123 352.0723 282.0259 354.0107 282.0259 356.9678 c282.0259 371.5918 L286.1299 371.5918 L286.1299 356.9678 L286.1299 355.373 286.415 354.3613 286.9854 353.9336 c287.5557 353.5059 288.897 353.292 291.0098 353.292 c293.1748 353.292 294.5352 353.5088 295.0894 353.9414 c295.644 354.375 295.9214 355.4365 295.9214 357.126 c295.9214 371.5918 Lf*U*u304.1367 349.9648 m304.1367 371.5918 L314.7998 371.5918 L317.4512 371.5918 319.2783 371.1328 320.2822 370.2139 c321.2852 369.2949 321.7871 367.6309 321.7871 365.2227 c321.7871 363.0361 321.5361 361.541 321.0342 360.7393 c320.5322 359.9355 319.5059 359.3818 317.9531 359.0752 c317.9531 358.9326 L320.3506 358.7842 321.5498 357.3848 321.5498 354.7344 c321.5498 349.9648 L317.4453 349.9648 L317.4453 353.9102 L317.4453 356.1387 316.3467 357.2529 314.1504 357.2529 c308.2402 357.2529 L308.2402 349.9648 l304.1367 349.9648 Lf1 D308.2402 360.707 m314.1348 360.707 L315.5391 360.707 316.4717 360.958 316.9307 361.46 c317.3906 361.9609 317.6201 362.9678 317.6201 364.4785 c317.6201 366.0205 317.4219 367.0156 317.0264 367.4648 c316.6299 367.9131 315.7607 368.1377 314.4199 368.1377 c308.2402 368.1377 l308.2402 360.707 Lf*U*u0 D333.8115 349.9648 m333.8115 371.5918 L344.4434 371.5918 L347.4639 371.5918 349.5791 370.9316 350.7881 369.6113 c351.998 368.291 352.6025 365.9775 352.6025 362.6719 c352.6025 357.2744 352.1162 353.8066 351.1445 352.2705 c350.1729 350.7334 347.9814 349.9648 344.5693 349.9648 c333.8115 349.9648 Lf1 D337.915 353.4189 m343.7617 353.4189 L345.7266 353.4189 346.9961 353.8701 347.5723 354.7734 c348.1475 355.6768 348.4355 357.6699 348.4355 360.7549 c348.4355 363.9443 348.1768 365.9727 347.6592 366.8389 c347.1416 367.7051 345.9268 368.1377 344.0146 368.1377 c337.915 368.1377 l337.915 353.4189 Lf*U*u0 D369.0098 354.1162 m359.6777 354.1162 L358.3311 349.9648 L353.9902 349.9648 L361.1826 371.5918 L367.3467 371.5918 L374.6504 349.9648 L370.3887 349.9648 l369.0098 354.1162 Lf1 D368.0596 357.1426 m364.3203 368.4072 L360.6445 357.1426 l368.0596 357.1426 Lf*U*u0 D385.4639 367.916 m385.4639 349.9648 L381.3604 349.9648 L381.3604 367.916 L375.1172 367.916 L375.1172 371.5918 L391.9287 371.5918 L391.9287 367.916 l385.4639 367.916 Lf*U*u407.415 354.1162 m398.083 354.1162 L396.7363 349.9648 L392.3955 349.9648 L399.5879 371.5918 L405.752 371.5918 L413.0557 349.9648 L408.7939 349.9648 l407.415 354.1162 Lf1 D406.4648 357.1426 m402.7256 368.4072 L399.0498 357.1426 l406.4648 357.1426 Lf*U*u0 D437.0439 357.6807 m441.1631 357.6807 L441.1631 356.9365 L441.1631 353.9258 440.6143 351.9795 439.5156 351.0977 c438.417 350.2158 435.9873 349.7744 432.2275 349.7744 c427.96 349.7744 425.335 350.4717 424.3525 351.8662 c423.3701 353.2607 422.8789 356.9893 422.8789 363.0518 c422.8789 366.6221 423.5449 368.9697 424.876 370.0947 c426.207 371.2197 428.9902 371.7822 433.2256 371.7822 c436.3096 371.7822 438.3691 371.3203 439.4053 370.3955 c440.4395 369.4717 440.958 367.6367 440.958 364.8896 c440.9736 364.3984 L436.8535 364.3984 L436.8535 364.9531 L436.8535 366.3691 436.5869 367.2744 436.0537 367.6709 c435.5205 368.0664 434.3027 368.2646 432.4014 368.2646 c429.8564 368.2646 428.3271 367.9531 427.8145 367.3301 c427.3027 366.707 427.0469 364.8584 427.0469 361.7842 c427.0469 357.6436 427.2764 355.1934 427.7354 354.4326 c428.1953 353.6729 429.6816 353.292 432.1953 353.292 c434.2344 353.292 435.5576 353.5029 436.165 353.9258 c436.7725 354.3486 437.0762 355.2783 437.0762 356.7148 c437.0439 357.6807 Lf*U*u447.7461 368.1377 m447.7461 362.5605 L457.8867 362.5605 L457.8867 359.5352 L447.7461 359.5352 L447.7461 353.4189 L458.5361 353.4189 L458.5361 349.9648 L443.6426 349.9648 L443.6426 371.5918 L458.4404 371.5918 L458.4404 368.1377 l447.7461 368.1377 Lf*U*u481.9922 371.5918 m481.9922 349.9648 L475.0371 349.9648 L468.8574 361.832 L468.5508 362.4238 468.0703 363.459 467.416 364.9375 c466.7188 366.4902 L466.0371 368.043 L465.8789 368.043 L465.9424 366.6172 L465.9902 365.207 L466.0215 362.3711 L466.0215 349.9648 L461.918 349.9648 L461.918 371.5918 L468.873 371.5918 L474.498 360.6279 L474.9941 359.6563 475.5703 358.4785 476.2256 357.0947 c477.0488 355.3359 L477.873 353.5615 L478.0156 353.5615 L477.9678 354.9561 L477.9209 356.3496 L477.8887 359.1387 L477.8887 371.5918 l481.9922 371.5918 Lf*U*u494.7393 367.916 m494.7393 349.9648 L490.6357 349.9648 L490.6357 367.916 L484.3926 367.916 L484.3926 371.5918 L501.2041 371.5918 L501.2041 367.916 l494.7393 367.916 Lf*U*u507.2793 368.1377 m507.2793 362.5605 L517.4199 362.5605 L517.4199 359.5352 L507.2793 359.5352 L507.2793 353.4189 L518.0693 353.4189 L518.0693 349.9648 L503.1758 349.9648 L503.1758 371.5918 L517.9736 371.5918 L517.9736 368.1377 l507.2793 368.1377 Lf*U*u521.4512 349.9648 m521.4512 371.5918 L532.1143 371.5918 L534.7656 371.5918 536.5928 371.1328 537.5967 370.2139 c538.5996 369.2949 539.1016 367.6309 539.1016 365.2227 c539.1016 363.0361 538.8506 361.541 538.3486 360.7393 c537.8467 359.9355 536.8203 359.3818 535.2676 359.0752 c535.2676 358.9326 L537.665 358.7842 538.8643 357.3848 538.8643 354.7344 c538.8643 349.9648 L534.7598 349.9648 L534.7598 353.9102 L534.7598 356.1387 533.6611 357.2529 531.4648 357.2529 c525.5547 357.2529 L525.5547 349.9648 l521.4512 349.9648 Lf1 D525.5547 360.707 m531.4492 360.707 L532.8535 360.707 533.7861 360.958 534.2451 361.46 c534.7051 361.9609 534.9346 362.9678 534.9346 364.4785 c534.9346 366.0205 534.7363 367.0156 534.3408 367.4648 c533.9443 367.9131 533.0752 368.1377 531.7344 368.1377 c525.5547 368.1377 l525.5547 360.707 Lf*UU0 D0 0.07 0.17 0.43 (PANTONE 403 U) 0 x135.0552 504.374 m79.667 504.374 L62.7627 504.374 49.0723 490.6738 49.0723 473.7739 C49.0723 387.082 L82.8184 387.082 L82.8184 447.6631 L82.8184 460.3447 82.3057 470.6226 94.9785 470.6226 C132 470.6226 L144.6836 470.6226 144.1606 460.3447 144.1606 447.6631 C144.1606 387.082 L165.6606 387.082 L165.6606 473.7739 L165.6606 490.6738 151.9541 504.374 135.0552 504.374 Cf454.7744 504.374 m510.1611 504.374 L527.0547 504.374 540.7617 490.6738 540.7617 473.7739 C540.7617 387.082 L507.0049 387.082 L507.0049 447.6631 L507.0049 460.3447 507.5225 470.6226 494.8506 470.6226 C457.8301 470.6226 L445.1494 470.6226 445.6729 460.3447 445.6729 447.6631 C445.6729 387.082 L424.166 387.082 L424.166 473.7739 L424.166 490.6738 437.8633 504.374 454.7744 504.374 Cf1 Ap0 0.61 0.97 0 (PANTONE 158 U) 0 x238.3809 451.209 m238.3809 458.3633 232.5854 464.1631 225.4272 464.1631 C225.4272 464.1631 L218.2749 464.1631 212.48 458.3633 212.48 451.209 C212.48 451.209 L212.48 444.0562 218.2749 438.2588 225.4272 438.2588 C225.4272 438.2588 L232.5854 438.2588 238.3809 444.0562 238.3809 451.209 C238.3809 451.209 Lf0 Ap0 0.07 0.17 0.43 (PANTONE 403 U) 0 x173.6284 472.8643 m173.6284 417.4824 L173.6284 400.5732 187.3311 386.8789 204.2402 386.8789 C290.9312 386.8789 L290.9312 420.6338 L230.335 420.6338 L217.6626 420.6338 207.3906 420.1152 207.3906 432.7803 C207.3906 469.8115 L207.3906 482.4878 217.6626 481.9663 230.335 481.9663 C290.9312 481.9663 L290.9312 503.4678 L204.2402 503.4678 L187.3311 503.4678 173.6284 489.7681 173.6284 472.8643 Cf1 Ap0 0.61 0.97 0 (PANTONE 158 U) 0 x364.3389 451.2031 m364.3389 444.0566 358.5371 438.252 351.3838 438.252 C351.3838 438.252 L344.2266 438.252 338.4336 444.0566 338.4336 451.2031 C338.4336 451.2031 L338.4336 458.3657 344.2266 464.1631 351.3838 464.1631 C351.3838 464.1631 L358.5371 464.1631 364.3389 458.3657 364.3389 451.2031 C364.3389 451.2031 Lf0 Ap0 0.07 0.17 0.43 (PANTONE 403 U) 0 x298.8989 472.8662 m298.8989 417.4775 L298.8989 400.5791 312.6035 386.8789 329.5068 386.8789 C416.2031 386.8789 L416.2031 420.6284 L355.5996 420.6284 L342.9268 420.6284 332.6582 420.1138 332.6582 432.7871 C332.6582 469.8096 L332.6582 482.4844 342.9268 481.9619 355.5996 481.9619 C416.2031 481.9619 L416.2031 503.4688 L329.5068 503.4688 L312.6035 503.4688 298.8989 489.7754 298.8989 472.8662 CfLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF